var gameOptions={enableAudio:true,enableTooltips:true};function GameTerritory(svgObj){"use strict";this.svgObj=svgObj;this.svgText=null;this.getName=function(){return this.svgObj.node.id};this.getCenter=function(){var svg=document.getElementsByTagName("svg")[0];var pt=svg.createSVGPoint();var top;pt.x=this.svgObj.cx();pt.y=this.svgObj.cy();pt=pt.matrixTransform(this.svgObj.node.getScreenCTM());top=window.pageYOffset;pt.y+=top;return pt};this.setColor=function(color){this.svgObj.fill(color)};this.setText=function(newText){this.svgText.text(newText)}}function GameCountry(svgObj){"use strict";this.svgObj=svgObj;this.name=svgObj.node.id.toString();this.territories=[];this.anchor=null;this.pointer=null;this.outlineStrokeWidth=null;this.outline=null;var agentOverview=null;var escapableAgentCount=0;var escapedAgentCount=0;var agentMap={};var loyaltyMap={};var self=this;var pulseID=-1;this.addLoyalPlayer=function(playerID){loyaltyMap[playerID]=true};this.createAgentOverview=function(players,getActionTargetCB){agentOverview=new AgentOverview($("body"),players.length,getActionTargetCB);this.positionAgentOverview()};this.positionAgentOverview=function(){agentOverview.position(self.anchor.getCenter())};this.setAgentOverviewTooltip=function(tooltip){agentOverview.setTooltip(tooltip)};this.readyAgentOverviewForTargetPick=function(source,validPlayers){agentOverview.readyAgentOverviewForTargetPick(source,validPlayers)};this.clearAgentPicking=function(){agentOverview.clearAgentPicking()};this.agentEscaped=function(){--escapableAgentCount;++escapedAgentCount};this.undoAgentEscape=function(){++escapableAgentCount;--escapedAgentCount};this.setEscapableAgentCount=function(agentCount){escapableAgentCount=agentCount;escapedAgentCount=0};this.getEscapableAgentCount=function(){return escapableAgentCount};this.hasBeenEscapedFrom=function(){return escapedAgentCount>0};this.setAgents=function(playerID,playerColor,agents){var totalAgents,key,shouldShowPointer;agentMap[playerID]=agents;agentOverview.setAgents(playerID,playerColor,agents);totalAgents=0;for(key in agentMap){if(agentMap.hasOwnProperty(key)){totalAgents+=agentMap[key].length}}shouldShowPointer=totalAgents>0;this.pointer&&this.pointer.style("visibility",shouldShowPointer?"visible":"hidden")};this.getAgentCount=function(playerID){return agentMap[playerID].length};this.hasPositiveAgents=function(playerID){var agentIndex,messageType;for(agentIndex=0;agentIndex<agentMap[playerID].length;++agentIndex){messageType=agentMap[playerID][agentIndex].messageType;if(messageType===MessageType.POSITIVE||messageType===MessageType.FLEXIBLE){return true}}return false};this.hasNegativeAgents=function(playerID){var agentIndex,messageType;for(agentIndex=0;agentIndex<agentMap[playerID].length;++agentIndex){messageType=agentMap[playerID][agentIndex].messageType;if(messageType===MessageType.NEGATIVE||messageType===MessageType.FLEXIBLE){return true}}return false};this.hasOpposingLoyalty=function(currentPlayerID){var player;for(player in loyaltyMap){if(player!=currentPlayerID){return true}}return false};this.hasOpposingAgents=function(currentPlayerID){var player;for(player in agentMap){if(player!=currentPlayerID&&this.getAgentCount(player)>0){return true}}return false};this.addOutline=function(outline){this.outline=outline;this.outlineStrokeWidth=outline.attr("stroke-width")};this.svgClone=function(){return this.svgObj.deepClone()};this.setColor=function(color){this.territories.forEach(function(t){t.setColor(color)})};this.highlightCountry=function(shouldHighlight){if(shouldHighlight){this.outline.stroke("#eeeeee");this.outline&&this.outline.parent.front();this.pointer&&this.pointer.front();$(this.svgObj.node).attr("class","pointerCursor")}else{this.outline.stroke("#000000");$(this.svgObj.node).attr("class","")}};this.startPulse=function(){pulseID=setInterval(function(){var normedValue=(Math.sin(Date.now()*.01)+1)*.5;var color=interpolateColor("#dddddd","#ffffff",normedValue);self.outline.stroke(color)},16)};this.stopPulse=function(){pulseID!==-1&&clearInterval(pulseID)};this.getCenter=function(){var svg=document.getElementsByTagName("svg")[0];var pt=svg.createSVGPoint();var top;pt.x=this.outline.bbox().cx;pt.y=this.outline.bbox().cy;pt=pt.matrixTransform(this.outline.node.getScreenCTM());pt.x+=window.pageXOffset;pt.y+=window.pageYOffset;return pt}}function GameMapUtility(){"use strict";this.territoryIdToCountryObject={};this.associateTerritoryWithCountry=function(id,country){this.territoryIdToCountryObject[id]=country};this.getCountryByTerritoryNodeId=function(id){return this.territoryIdToCountryObject[id]}}function GameMap(parentElement){"use strict";this.root=parentElement;this.svgDoc=null;this.background=null;this.countries=[];this.coords={x:0,y:0,width:0,height:0};this.currentHoveredCountry=null;this.utility=new GameMapUtility;var self=this;var loaded=false;var intersectionRect=null;var numHits=0;this.loadMap=function(url,loadCompleteCallback){$("#map").remove();$(".agentOverviewContainer").remove();self.countries=[];this.root.append('<div id="map" style="z-index:-1000;position:absolute; top:0; width:100%; height:100%"></div>');this.svgDoc=SVG("map");var client=new XMLHttpRequest;client.open("GET",url);client.onreadystatechange=function(){if(client.readyState===4){var loadedMap=self.svgDoc.svg(client.responseText);onSvgLoadComplete.call(self,loadedMap);var padding=self.coords.height*.2;self.svgDoc.viewbox(self.coords.x,self.coords.y-padding,self.coords.width,self.coords.height+padding*2.25);loaded=true;loadCompleteCallback&&loadCompleteCallback()}};client.send()};this.isLoaded=function(){return loaded};this.clearCountryHighlights=function(){for(var countryIndex=0;countryIndex<self.countries.length;++countryIndex){self.countries[countryIndex].highlightCountry(false)}};this.clearCountryTargetPicking=function(){for(var countryIndex=0;countryIndex<self.countries.length;++countryIndex){self.countries[countryIndex].clearAgentPicking()}};this.getCountryIndex=function(country){for(var countryIndex=0;countryIndex<self.countries.length;++countryIndex){if(self.countries[countryIndex]===country){return countryIndex}}return-1};this.getAllTerritories=function(){var allTerritories=[];this.countries.forEach(function(country){Array.prototype.push.apply(allTerritories,country.territories)});return allTerritories};function onCountryClick(country){country.outline.stroke({width:country.outlineStrokeWidth*2});$("#map").trigger("countryClicked",country)}function onCountryMouseOver(country){if(self.currentHoveredCountry){onCountryMouseOut(self.currentHoveredCountry)}self.currentHoveredCountry=country;country.outline.animate(100,">").stroke({width:country.outlineStrokeWidth*2});country.outline.parent.front();$("#map").trigger("countryMouseOver",country)}function onCountryMouseOut(country){self.currentHoveredCountry=null;country.outline.animate(100,">").stroke({width:country.outlineStrokeWidth});$("#map").trigger("countryMouseOut",country)}var processLoadedCountry=function(countryGroup){var newCountry=new GameCountry(countryGroup);var children=countryGroup.children();var i;for(i=0;i<children.length;++i){if(children[i].node.id.indexOf("agent_anchor")!==-1){children[i].style("visibility","hidden");newCountry.anchor=new GameTerritory(children[i]);continue}else if(children[i].node.id.indexOf("pointer")!==-1){newCountry.pointer=children[i]}if(children[i]instanceof SVG.Path){if(children[i].node.id.indexOf("outline")!==-1){newCountry.addOutline(children[i]);continue}}else if(children[i]instanceof SVG.G){processLoadedDistrict(children[i],newCountry)}}self.countries.push(newCountry)};var processLoadedDistrict=function(districtGroup,parentCountry){var newDistrict=null;var newText=null;var children=districtGroup.children();var currentDistrict,i;for(i=0;i<children.length;++i){if(children[i].node.id.indexOf("text_anchor")!==-1){if(newText===null){newText=new SVG.Text;newText.styles={};newText.text(" ");newText.move(children[i].x(),children[i].y());districtGroup.add(newText);children[i].remove()}else{alert("found more than one text anchor for district")}}if(children[i]instanceof SVG.Path){if(newDistrict===null){newDistrict=new GameTerritory(children[i]);parentCountry.territories.push(newDistrict);self.utility.associateTerritoryWithCountry(children[i].node.id,parentCountry)}else{alert("invalid map layout: multiple districts where only 1 is expected")}}}newDistrict&&(newDistrict.svgText=newText);if(parentCountry.outline!==null&&newDistrict!==null){newDistrict.svgObj.click(function(event){event.cancelBubble=true;onCountryClick(parentCountry)});newDistrict.svgObj.mouseover(function(){onCountryMouseOver(parentCountry)});newDistrict.svgObj.mouseout(function(){onCountryMouseOut(parentCountry)});newText&&newText.mouseover(function(){onCountryMouseOver(parentCountry)})}};var onSvgLoadComplete=function(svg){var bounds=getMapBounds.call(this,svg);var propName;for(propName in svg){if(svg[propName]instanceof SVG.G){if(propName.indexOf("Nation")!==-1){processLoadedCountry.call(this,svg[propName])}else if(propName==="continent"){this.background=svg[propName];this.background.node.style.pointerEvents="none"}}}this.coords.x=bounds.minX;this.coords.y=bounds.minY;this.coords.width=bounds.width();this.coords.height=bounds.height();intersectionRect=self.svgDoc.node.createSVGRect()};var getMapBounds=function(svgMap){var bounds={minX:Number.MAX_VALUE,minY:Number.MAX_VALUE,maxX:Number.MIN_VALUE,maxY:Number.MIN_VALUE,expandBy:function(box){this.minX=Math.min(this.minX,box.x);this.minY=Math.min(this.minY,box.y);this.maxX=Math.max(this.maxX,box.x+box.width);this.maxY=Math.max(this.maxY,box.y+box.height)},width:function(){return this.maxX-this.minX},height:function(){return this.maxY-this.minY}};for(var propName in svgMap){if(svgMap[propName]instanceof SVG.G){if(propName.indexOf("Nation")!==-1){bounds.expandBy(svgMap[propName].bbox())}}}return bounds}}function GameMapAnimator(map){var map=map;var pulseID;this.animateMapScaleIn=function(){stopOutlinePulse();var numFinishedAnimating=0,i,fx;map.background.opacity(1);map.background.each(function(){this.opacity(0);this.stroke({color:"#000",opacity:0,width:15})});for(i=0;i<map.countries.length;++i){map.countries[i].svgObj.scale(0,0);fx=map.countries[i].svgObj.animate(500+Math.random()*500,SVG.easing.backOut);fx.opacity(1).scale(1,1).after(function(){if(++numFinishedAnimating===map.countries.length){map.background.each(function(){var backgroundPath=this;var strokeAttr={color:"#000",opacity:1,width:60};backgroundPath.opacity(1);backgroundPath.animate(1e3,SVG.easing.bounce).stroke(strokeAttr)});startOutlinePulse(1e3)}})}};this.animateMapJiggle=function(){var fadeInDuration=200;var fadeOutDuration=1e3;var animDuration=1e3;var fadeOutStart=animDuration-fadeOutDuration;for(var i=0;i<map.countries.length;++i){var sinOffset=Math.random()*1e3;!function(startTime,sinOffset){var country=map.countries[i].svgObj;var id=window.setInterval(function(){var elapsed=Date.now()-startTime;var fadeIn=Math.min(elapsed/fadeInDuration,1);var fadeOut=1-Math.max((elapsed-fadeOutStart)/fadeOutDuration,0);var scaleOffset=Math.abs(Math.sin(elapsed*.005+sinOffset)*.1);scaleOffset*=fadeIn*fadeOut;if(elapsed>animDuration){scaleOffset=0;window.clearInterval(id)}country.scale(1+scaleOffset,1+scaleOffset)},16)}(Date.now(),sinOffset)}};this.animateMapSplitApart=function(){stopOutlinePulse();map.background.opacity(1);map.background.each(function(){this.opacity(0);this.stroke({color:"#000",opacity:0,width:15})});var bounds=map.background.bbox();var directions=[];var i;for(i=0;i<map.countries.length;++i){var countryBounds=map.countries[i].svgObj.bbox();var dx=countryBounds.cx-bounds.cx;var dy=countryBounds.cy-bounds.cy;var length=Math.sqrt(dx*dx+dy*dy);dx/=length;dy/=length;directions.push({x:dx,y:dy,size:length})}var extraOffset;var newX,newY;var startX,startY;var svgObj;var animsComplete=0;for(i=0;i<map.countries.length;++i){svgObj=map.countries[i].svgObj;startX=svgObj.x();startY=svgObj.y();extraOffset=directions[i].size/5;newX=directions[i].x*extraOffset;newY=directions[i].y*extraOffset;svgObj.animate(500,SVG.easing.elastic).move(newX,newY).after(function(){var x=startX;var y=startY;if(++animsComplete===map.countries.length){for(var i=0;i<map.countries.length;++i){svgObj=map.countries[i].svgObj;svgObj.animate(300,SVG.easing.backOut,100).move(x,y)}map.background.each(function(){this.animate(1e3,SVG.easing.bounce,400).stroke({color:"#000",opacity:1,width:60}).during(function(){this.opacity(1)}).after(function(){startOutlinePulse()})})}})}};var startOutlinePulse=function(delay){if(delay>0){setTimeout(startOutlinePulse,delay);return}var startTime=Date.now();pulseID=setInterval(function(){map.background.each(function(){var backgroundPath=this;var newWidth=50+Math.cos((Date.now()-startTime)*.002)*10;var strokeAttr={color:"#000",opacity:1,width:60};strokeAttr.width=newWidth;backgroundPath.stroke(strokeAttr)},16)})};var stopOutlinePulse=function(){if(pulseID!==undefined){clearInterval(pulseID);pulseID=undefined}}}!function GameAudio(){"use strict";var clickSound=new Howl({urls:["audio/tap-resonant.mp3"]});var slideSound=new Howl({urls:["audio/slide-scissors.mp3"]});var backgroundMusic=new Howl({urls:["audio/The-Complex-30s.mp3"],onplay:function(){this.fade(.5,0,1e4)}});var newRoundMusic=new Howl({urls:["audio/danosongs.com-magicghost.mp3"]});var turnSubmitSound=new Howl({urls:["audio/pill-bottle-2.mp3"]});var cancelSound=new Howl({urls:["audio/button-15.mp3"]});$(document).on("AudioEnabled",function(e,enableAudio){gameOptions.enableAudio=enableAudio});$(document).on("GameSetup",function(){gameOptions.enableAudio&&backgroundMusic.play()});$(document).on("NewRound",function(){gameOptions.enableAudio&&newRoundMusic.play()});$(document).on("ButtonClicked",function(){gameOptions.enableAudio&&clickSound.play()});$(document).on("ActionSubmitted",function(){gameOptions.enableAudio&&slideSound.play()});$(document).on("ActionCanceled",function(){gameOptions.enableAudio&&cancelSound.play()});$(document).on("MessageTypeClicked",function(){gameOptions.enableAudio&&clickSound.play()});$(document).on("TurnSubmitted",function(){gameOptions.enableAudio&&turnSubmitSound.play()})}();var TOOLTIPS={ACTIONS:{ATTACK:{TEXT:"Turn opponent's loyalties back to neutral (Cost: 2)"},BOOST:{TEXT:"Gain loyalty from neutral citizens (Cost: 2)"},DESPERATION:{TEXT:"Remove all opposing Agents from the board (Can only be used once per game if you are falling too far behind your opponent)"},DISABLE:{TEXT:"Temporarily disable an enemy's Agent that is occupying the same location as one of your own Agents (Cost: 3)"},ESCAPE:{TEXT:"Pre-emptively move one of your Agents to another location before they can be disabled or removed (Cost: 1)"},MOVE:{TEXT:"Move one of your Agents to another location (Cost: 0)"},RECRUIT:{TEXT:"Place a new Agent into the specified Region (Cost: 3)"},REMOVE:{TEXT:"Permanently remove an enemy's Agent that is occupying the same location as one of your own Agents (Cost: 5)"},SHIFT:{TEXT:"Change an Agent's message type (Cost: 1)"},WITHDRAW:{TEXT:"Withdraw an Agent from the board (Generates 1 Resource)"}},TARGET:{TITLE:"Target Player",TEXT:"Target "},MESSAGE:{FLEXIBLE:{TITLE:"Flexible Message",TEXT:"Flexible message that will spread your loyalty if possible, otherwise will remove another player's loyalty"},NEGATIVE:{TITLE:"Negative Message",TEXT:"Negative message that attacks other player's loyalty (twice as effective as the flexible message at removing opposing loyalty, but cannot create loyalty)"},POSITIVE:{TITLE:"Positive Message",TEXT:"Positive message that spreads your loyalty faster (twice as effective as the flexible message at spreading loyalty, but cannot remove opposing loyalty)"}},SCOPE:{GLOBAL:{TEXT:"This action affects every country"},BROAD:{TEXT:"This action affects every country you have an Agent in"},LOCAL:{TEXT:"This action affects a country you select with an Agent in it"}},AGENTS:{CONTAINER:{TITLE:"Agent Overview",TEXT:"The Agents placed in this Region"},DISABLED_CONTAINER:{TITLE:"Disabled Agents",TEXT:"The Agents that have been temporarily disabled, Move them to put them back in play"},DETAILS:{TITLE:"Agent Details",MESSAGE:"Message Type: "}},SCOREBOARD:{COUNTRY:{TITLE:"Controlled Regions",TEXT:"The total number of Regions needed to win the game and how many this player currently controls"},TERRITORY:{TITLE:"Loyal Districts",TEXT:"The total number of Districts needed to win the game and how many this player currently has loyalty in"}},OPTIONS:{SOUNDS:{TITLE:"Toggle Sounds",TEXT:"Toggle sounds on or off"},TOOLTIPS:{TITLE:"Toggle Tooltips",TEXT:"Toggle tooltip visibility on or off"}},PLAYBACK:{START:{TITLE:"View Game Start",TEXT:"Review the first turn of the game"},BACK:{TITLE:"View Previous Turn",TEXT:"Review a previous turn that has been played"},CURRENT:{TITLE:"Turn Number",TEXT:"The turn number you are currently viewing"},FORWARD:{TITLE:"View Next Turn",TEXT:"View the next turn that has already been played"},END:{TITLE:"Return To Current",TEXT:"Return to the current turn being played in the game"}}};function ActionBar(clickCB){"use strict";this.clickCB=clickCB;var self=this;var isInteractive=true;this.dock=$("<div class='actionBar'></div>");document.body.appendChild(this.dock[0]);this.actionsDock=$("<div class='actionBarContainer'></div>");this.dock.append(this.actionsDock[0]);this.iconContainer=$("<div class='actionBarIconsContainer'></div>");this.actionsDock.append(this.iconContainer[0]);this.recruitIcon={};this.recruitIcon.icon=$("<div class='actionBarIcon action-recruit' name='recruit'></div>");this.recruitIcon.overlay=$("<div class='iconOverlay'></div>");this.iconContainer.append(this.recruitIcon.icon[0]);this.recruitIcon.icon.append(this.recruitIcon.overlay[0]);this.shiftIcon={};this.shiftIcon.icon=$("<div class='actionBarIcon action-shift' name='shift'></div>");this.shiftIcon.overlay=$("<div class='iconOverlay'></div>");this.iconContainer.append(this.shiftIcon.icon[0]);this.shiftIcon.icon.append(this.shiftIcon.overlay[0]);this.withdrawIcon={};this.withdrawIcon.icon=$("<div class='actionBarIcon action-withdraw' name='withdraw'></div>");this.withdrawIcon.overlay=$("<div class='iconOverlay'></div>");this.iconContainer.append(this.withdrawIcon.icon[0]);this.withdrawIcon.icon.append(this.withdrawIcon.overlay[0]);this.boostIcon={};this.boostIcon.icon=$("<div class='actionBarIcon action-boost' name='boost'></div>");this.boostIcon.overlay=$("<div class='iconOverlay'></div>");this.iconContainer.append(this.boostIcon.icon[0]);this.boostIcon.icon.append(this.boostIcon.overlay[0]);this.attackIcon={};this.attackIcon.icon=$("<div class='actionBarIcon action-attack' name='attack'></div>");this.attackIcon.overlay=$("<div class='iconOverlay'></div>");this.iconContainer.append(this.attackIcon.icon[0]);this.attackIcon.icon.append(this.attackIcon.overlay[0]);this.moveIcon={};this.moveIcon.icon=$("<div class='actionBarIcon action-move' name='move'></div>");this.moveIcon.overlay=$("<div class='iconOverlay'></div>");this.iconContainer.append(this.moveIcon.icon[0]);this.moveIcon.icon.append(this.moveIcon.overlay[0]);this.escapeIcon={};this.escapeIcon.icon=$("<div class='actionBarIcon action-escape' name='escape'></div>");this.escapeIcon.overlay=$("<div class='iconOverlay'></div>");this.iconContainer.append(this.escapeIcon.icon[0]);this.escapeIcon.icon.append(this.escapeIcon.overlay[0]);this.disableIcon={};this.disableIcon.icon=$("<div class='actionBarIcon action-disable' name='disable'></div>");this.disableIcon.overlay=$("<div class='iconOverlay'></div>");this.iconContainer.append(this.disableIcon.icon[0]);this.disableIcon.icon.append(this.disableIcon.overlay[0]);this.removeIcon={};this.removeIcon.icon=$("<div class='actionBarIcon action-remove' name='remove'></div>");this.removeIcon.overlay=$("<div class='iconOverlay'></div>");this.iconContainer.append(this.removeIcon.icon[0]);this.removeIcon.icon.append(this.removeIcon.overlay[0]);this.desperationIcon={};this.desperationIcon.icon=$("<div class='actionBarIcon action-desperation' name='desperation'></div>");this.desperationIcon.overlay=$("<div class='iconOverlay'></div>");this.iconContainer.append(this.desperationIcon.icon[0]);this.desperationIcon.icon.append(this.desperationIcon.overlay[0]);this.show=function(){this.dock.css("visibility","visible");return this};this.hide=function(){this.dock.css("visibility","hidden");return this};this.setInteractive=function(interactive){isInteractive=interactive;setIconInteractive(self.recruitIcon,isInteractive);setIconInteractive(self.shiftIcon,isInteractive);setIconInteractive(self.withdrawIcon,isInteractive);setIconInteractive(self.boostIcon,isInteractive);setIconInteractive(self.attackIcon,isInteractive);setIconInteractive(self.moveIcon,isInteractive);setIconInteractive(self.escapeIcon,isInteractive);setIconInteractive(self.disableIcon,isInteractive);setIconInteractive(self.removeIcon,isInteractive);setIconInteractive(self.desperationIcon,isInteractive);return this};this.enableAction=function(enabled,action){switch(action){case Attack:setIconInteractive(self.attackIcon,enabled);break;case Boost:setIconInteractive(self.boostIcon,enabled);break;case Desperation:setIconInteractive(self.desperationIcon,enabled);break;case Disable:setIconInteractive(self.disableIcon,enabled);break;case Escape:setIconInteractive(self.escapeIcon,enabled);break;case Move:setIconInteractive(self.moveIcon,enabled);break;case Recruit:setIconInteractive(self.recruitIcon,enabled);break;case Remove:setIconInteractive(self.removeIcon,enabled);break;case Shift:setIconInteractive(self.shiftIcon,enabled);break;case Withdraw:setIconInteractive(self.withdrawIcon,enabled);break}};this.setActionTooltips=function(){setIconTooltip(self.attackIcon.icon,TOOLTIPS.ACTIONS.ATTACK);setIconTooltip(self.boostIcon.icon,TOOLTIPS.ACTIONS.BOOST);setIconTooltip(self.desperationIcon.icon,TOOLTIPS.ACTIONS.DESPERATION);setIconTooltip(self.disableIcon.icon,TOOLTIPS.ACTIONS.DISABLE);setIconTooltip(self.escapeIcon.icon,TOOLTIPS.ACTIONS.ESCAPE);setIconTooltip(self.moveIcon.icon,TOOLTIPS.ACTIONS.MOVE);setIconTooltip(self.recruitIcon.icon,TOOLTIPS.ACTIONS.RECRUIT);setIconTooltip(self.removeIcon.icon,TOOLTIPS.ACTIONS.REMOVE);setIconTooltip(self.shiftIcon.icon,TOOLTIPS.ACTIONS.SHIFT);setIconTooltip(self.withdrawIcon.icon,TOOLTIPS.ACTIONS.WITHDRAW)};var setIconInteractive=function(actionButton,isInteractive){actionButton.icon.attr("disabled",!isInteractive);actionButton.overlay.attr("disabled",!isInteractive)};var setIconTooltip=function(actionButton,tooltip){new Opentip(actionButton[0],tooltip.TEXT,tooltip.TITLE)};$(".actionBarIcon").mouseenter(function(){if($(this).attr("disabled")!="disabled"){$(this).animate({top:-10},{duration:150,queue:false})}});$(".actionBarIcon").mouseleave(function(){if($(this).attr("disabled")!="disabled"){$(this).animate({top:0},{duration:150,queue:false})}});$(".actionBarIcon").click(function(event){if($(this).attr("disabled")!="disabled"){event.stopPropagation();self.clickCB($(this))}})}function ActionItem(actionClass,text,cost,styles,clickCB){"use strict";this.rootElement=document.createElement("div");this.icon=actionClass&&document.createElement("div");this.notes=document.createElement("div");this.cost=document.createElement("div");var self=this;!function construct(self){self.rootElement.className=styles.action;self.rootElement.onclick=onActionClicked;if(self.icon!==null){self.icon.className=styles.icon+" "+actionClass;self.rootElement.appendChild(self.icon)}self.notes.className=styles.notes;self.cost.className=styles.cost;self.rootElement.appendChild(self.notes);self.rootElement.appendChild(self.cost);$(self.notes).text(text);$(self.cost).text(cost)}(this);function onActionClicked(){clickCB(self)}this.setMouseCallbacks=function(mouseOverCB,mouseOutCB){self.rootElement.onmouseover=mouseOverCB;self.rootElement.onmouseout=mouseOutCB}}function ActionContainer(title,styles,clickCB){"use strict";this.rootElement=document.createElement("div");this.topBar=document.createElement("div");this.titleElement=document.createElement("p");this.actions=[];this.click=clickCB;var self=this;!function construct(self){self.rootElement.className=styles.container;$(self.titleElement).text(title);self.titleElement.className=styles.title;self.topBar.className=styles.topBar;self.topBar.appendChild(self.titleElement);self.rootElement.appendChild(self.topBar)}(this);this.clearActions=function(){for(var actionIndex=0;actionIndex<this.actions.length;++actionIndex){this.rootElement.removeChild(this.actions[actionIndex].rootElement)}this.actions=[];this.rootElement.style.display="none"};this.addAction=function(imageUrl,text,cost,styles){this.rootElement.style.display="block";var newAction=new ActionItem(imageUrl,text,cost,styles,onActionClicked);var currentHeight=parseInt(this.rootElement.style.height,10);this.rootElement.appendChild(newAction.rootElement);this.actions.push(newAction);return newAction};this.addButton=function(classname,callback,buttonText){this.rootElement.style.display="block";var button=document.createElement("button");button.className=classname;button.onclick=callback;button.innerHTML="<div class='iconOverlay'></div>";buttonText=buttonText||"";var actionDiv=document.createElement("div");actionDiv.className="actionListItem";var actionDivText=document.createElement("div");actionDivText.className="actionListNotesLeftFloatBold";actionDivText.innerHTML=buttonText;actionDiv.appendChild(actionDivText);actionDiv.appendChild(button);var currentHeight=parseInt(this.rootElement.style.height,10);this.rootElement.appendChild(actionDiv);return button};this.show=function(animationDuration,fn){var animateOn=typeof animationDuration==="number";fn=fn||function(){};if(animateOn)$(this.rootElement).animate("slide",{direction:"left"},animationDuration,fn);else $(this.rootElement).css("display","");return this};this.hide=function(animationDuration,fn){var animateOn=typeof animationDuration==="number";fn=fn||function(){};if(animateOn)$(this.rootElement).animate("slide",{direction:"right"},animationDuration,fn);else $(this.rootElement).css("display","none");return this};this.isEmpty=function(){return $(this.rootElement).children(".actionListItem").length===0};this.setButtonText=function(buttonText,index){index=index||0;var $root=$(this.rootElement);var div=$root.find(".actionListNotesLeftFloatBold");$($(this.rootElement).find(".actionListNotesLeftFloatBold")[index]).text(buttonText)};function onActionClicked(actionItem){if(self.click!==undefined){for(var actionIndex=0;actionIndex<self.actions.length;++actionIndex){if(self.actions[actionIndex]===actionItem){self.click(self,actionIndex)}}}}}function ActionList(pageRoot,removeActionCB,clearActionsCB,submitTurnCB){"use strict";this.root=$('<div class="actionList"></div>');pageRoot.append(this.root);this.incomeUpdated=false;this.removeAction=removeActionCB;this.actionsActive=false;this.firstTime=true;var self=this;var isInteractive=true;var playerNames=null;var countryNames=null;this.setInteractive=function(interactive){isInteractive=interactive;clearActions.disabled=!isInteractive;return this};this.setPlayerNames=function(players){playerNames=players};this.getPlayerNames=function(){return playerNames};this.setCountryNames=function(countries){countryNames=countries};this.clearActions=function(){desperationContainer.clearActions();preemptiveContainer.clearActions();attackContainer.clearActions();loyaltyContainer.clearActions()};this.addAction=function(action,mouseOverCB,mouseOutCB){var actionString=getActionString(action);var addedAction;if(action instanceof Attack){addedAction=loyaltyContainer.addAction("action-attack",actionString,action.cost,actionStyleDefault)}else if(action instanceof Boost){addedAction=loyaltyContainer.addAction("action-boost",actionString,action.cost,actionStyleDefault)}else if(action instanceof Desperation){addedAction=desperationContainer.addAction("action-desperation",actionString,action.cost,actionStyleDefault)}else if(action instanceof Disable){addedAction=attackContainer.addAction("action-disable",actionString,action.cost,actionStyleDefault)}else if(action instanceof Escape){addedAction=preemptiveContainer.addAction("action-escape",actionString,action.cost,actionStyleDefault)}else if(action instanceof Move){addedAction=loyaltyContainer.addAction("action-move",actionString,action.cost,actionStyleDefault)}else if(action instanceof Recruit){addedAction=loyaltyContainer.addAction("action-recruit",actionString,action.cost,actionStyleDefault)}else if(action instanceof Remove){addedAction=attackContainer.addAction("action-remove",actionString,action.cost,actionStyleDefault)}else if(action instanceof Shift){addedAction=loyaltyContainer.addAction("action-shift",actionString,action.cost,actionStyleDefault)}else if(action instanceof Withdraw){addedAction=loyaltyContainer.addAction("action-withdraw",actionString,action.cost,actionStyleDefault)}function mouseOverActionInjector(e){mouseOverCB(e,action)}function mouseOutActionInjector(e){mouseOutCB(e,action)}addedAction&&addedAction.setMouseCallbacks(mouseOverActionInjector,mouseOutActionInjector)};this.setResources=function(currentResources,taxCost,currentCosts,gameState,playerID){taxContainer.clearActions();costContainer.clearActions();remainingResourcesContainer.clearActions();var startValue=self.animateResourceCounter(currentResources,gameState,playerID);if(self.incomeUpdated){self.toggleContainers(true)}if(!self.incomeUpdated){self.incomeUpdated=true;updateIncomeContainer(gameState,playerID)}taxContainer.addAction("actionListTaxes","",taxCost,actionStyleDefault);costContainer.addAction(null,"Spending Resources:",currentCosts,actionStyleCost1);var remaining=currentResources-currentCosts;if(remaining>=0){costContainer.addAction(null,"Remaining Resources:",remaining,actionStyleCost1)}else{costContainer.addAction(null,"Remaining Resources:",remaining,actionStyleCost2)}};var updateIncomeContainer=function(gameState,playerID){incomeContainer.clearActions();var actionPoints=calculateActionPointsEarned(gameState,playerID);incomeContainer.addAction("actionPoints-bankedResources","Banked Resources: ",actionPoints.bankedResources.toString(),actionStyleCost1);incomeContainer.addAction("actionPoints-defaultIncome","Dividend: ",actionPoints.defaultIncome.toString(),actionStyleCost1);if(actionPoints.territoriesControlled&&actionPoints.territoryControlBonus>0)incomeContainer.addAction("actionPoints-territoryControl",actionPoints.territoriesControlled+" Districts",actionPoints.territoryControlBonus.toString(),actionStyleCost1);if(actionPoints.countriesControlled)for(var c=0;c<actionPoints.countriesControlled.length;c++){var controlledCountry=actionPoints.countriesControlled[c];incomeContainer.addAction("actionPoints-countryControl","Region "+controlledCountry.nationID.toString(),controlledCountry.nationBonus.toString(),actionStyleCost1)}incomeContainer.addAction("actionPoints-agentUpkeep",actionPoints.numAgents.toString()+" Agents",actionPoints.agentUpkeep.toString(),actionPoints.agentUpkeep>=0?actionStyleCost1:actionStyleCost2)};this.animateResourceCounter=function(currentResources,gameState,playerID){var $availableResources=$(".actionListStartingResourcesContainer .actionListAvailableResources");var startValue=parseInt($availableResources.text(),10);var startTime=Date.now();var i=setInterval(function(){var percentComplete=(Date.now()-startTime)/1e3;var lerpedValue=startValue+(currentResources-startValue)*percentComplete;if(lerpedValue>=currentResources){clearInterval(i)}$availableResources.text(Math.floor(lerpedValue))},16);return startValue};this.enableSubmitButton=function(enabled){submitButton.disabled=!enabled};this.show=function(){this.root.css("visibility","visible");return this};this.hide=function(){this.root.css("visibility","hidden");return this};var containerStyleStartingResources={container:"actionListStartingResourcesContainer",topBar:"startingResourcesTopBar",title:"actionListHeaderText"};var containerStyleIncome={container:"actionListIncomeContainer",topBar:"incomeTopBar",title:"actionListHeaderText"};
var containerStyleActions={container:"actionListActionsContainer",topBar:"actionsTopBar",title:"actionListHeaderText"};var containerStyleDesperation={container:"actionListDesperationContainer",topBar:"desperationTopBar",title:"actionListHeaderText"};var containerStyleTax={container:"actionListTaxesContainer",topBar:"taxesTopBar",title:"actionListHeaderText"};var containerStyleCost={container:"actionListCostContainer",topBar:"costTopBar",title:"actionListHeaderText"};var containerStyleEndingResources={container:"actionListEndingResourcesContainer",topBar:"endingResourcesTopBar",title:"actionListHeaderText"};var containerStyleSubmit={container:"actionListSubmitContainer",topBar:"submitTopBar",title:"actionListHeaderText"};var actionStyleDefault={action:"actionListItem",icon:"actionListIcon",notes:"actionListNotesCentered",cost:"actionListCost"};var actionStyleCost1={action:"actionListItem",icon:"actionListIcon",notes:"actionListNotesLeftFloat",cost:"actionListAvailableResources"};var actionStyleCost2={action:"actionListItem",icon:"actionListIcon",notes:"actionListNotesLeftFloat",cost:"actionListCost"};function actionItemClicked(container,actionIndex){if(isInteractive){var containerIndex=2;if(container===preemptiveContainer){containerIndex=0}else if(container===attackContainer){containerIndex=1}self.removeAction(containerIndex,actionIndex);$(document).trigger("ActionCanceled")}}var getActionString=function(action){if(action.scope===undefined||action.scope===ActionScope.LOCAL){return"At "+countryNames[action.source]}else if(action.scope===ActionScope.BROAD){return"All Agents"}return"All Regions"};var addContainer=function(title,styles,clickCB){var newContainer=new ActionContainer(title,styles,clickCB);self.root.append(newContainer.rootElement);return newContainer};var calculateActionPointsEarned=function(gameState,playerID){var actionPoints={};actionPoints.territoriesControlled=0;for(var c=0;c<gameState.countries.length;c++)actionPoints.territoriesControlled+=getNumberOfLoyalTerritories(gameState.countries[c],playerID);actionPoints.territoryControlBonus=0;var territoryBonuses=getTerritoryResourceThresholds();for(var n=0;n<territoryBonuses.length;n++){if(actionPoints.territoriesControlled>=territoryBonuses[n].threshold){actionPoints.territoryControlBonus+=territoryBonuses[n].value}}actionPoints.countriesControlled=[];for(var c=0;c<gameState.countries.length;c++){if(playerControlsCountry(gameState.countries[c],playerID)){actionPoints.countriesControlled.push({nationID:c,nationBonus:getCountryResources(gameState.countries[c])})}}actionPoints.agentUpkeep=-1*getAgentUpkeepCosts(gameState,playerID);actionPoints.numAgents=getActiveAgents(gameState,playerID);actionPoints.defaultIncome=1;actionPoints.bankedResources=gameState.players[playerID].resources-(actionPoints.defaultIncome+actionPoints.agentUpkeep+(actionPoints.territoryControlBonus||0)+function(){var r=0;if(actionPoints.countriesControlled.length>0){for(var c=0;c<actionPoints.countriesControlled.length;c++){r+=actionPoints.countriesControlled[c].nationBonus;return r}}else return 0}());return actionPoints};this.toggleContainers=function(setActionsActive){var transitionTime=1e3;if(self.firstTime){self.firstTime=!self.firstTime;self.hide();incomeContainer.show();availableResourcesContainer.show();desperationContainer.hide();preemptiveContainer.hide();attackContainer.hide();loyaltyContainer.hide();taxContainer.hide();costContainer.show();submitContainer.show();self.show()}else{self.actionsActive=setActionsActive||!self.actionsActive;toggleContainer.setButtonText("Show Income");if(self.actionsActive){incomeContainer.hide();availableResourcesContainer.show();if(!desperationContainer.isEmpty())desperationContainer.show();if(!preemptiveContainer.isEmpty())preemptiveContainer.show();if(!attackContainer.isEmpty())attackContainer.show();if(!loyaltyContainer.isEmpty())loyaltyContainer.show();if(!taxContainer.isEmpty())taxContainer.show();costContainer.show();submitContainer.show()}else{toggleContainer.setButtonText("Show Actions");incomeContainer.show();availableResourcesContainer.show();if(!desperationContainer.isEmpty())desperationContainer.hide();if(!preemptiveContainer.isEmpty())preemptiveContainer.hide();if(!attackContainer.isEmpty())attackContainer.hide();if(!loyaltyContainer.isEmpty())loyaltyContainer.hide();if(!taxContainer.isEmpty())taxContainer.hide();costContainer.show();submitContainer.show()}}};var toggleContainer=addContainer("CONTROLS",containerStyleSubmit);var toggleButton=toggleContainer.addButton("actionListToggleView",function(){self.toggleContainers()},"Show Actions");var incomeContainer=addContainer("INCOME",containerStyleIncome);var availableResourcesContainer=addContainer("STARTING RESOURCES",containerStyleStartingResources);availableResourcesContainer.addAction(null,"Available Resources:",0,actionStyleCost1);var desperationContainer=addContainer("DESPERATION",containerStyleDesperation,actionItemClicked);var preemptiveContainer=addContainer("PREEMPTIVE ACTIONS",containerStyleActions,actionItemClicked);var attackContainer=addContainer("ATTACKS",containerStyleActions,actionItemClicked);var loyaltyContainer=addContainer("LOYALTY",containerStyleActions,actionItemClicked);var taxContainer=addContainer("TAXES",containerStyleTax);var costContainer=addContainer("TOTAL COSTS",containerStyleCost);var remainingResourcesContainer=addContainer("ENDING RESOURCES",containerStyleEndingResources);var submitContainer=addContainer("SUBMIT",containerStyleSubmit);var clearActions=submitContainer.addButton("actionListClearActions",clearActionsCB,"Cancel Actions");var submitButton=submitContainer.addButton("actionListSubmitTurn",submitTurnCB,"Submit Turn")}function actionPointsAnimator(rootElement,pos,text,color){"use strict";pos.x=pos.x||pos.left||0;pos.y=pos.y||pos.top||0;var color=color||"#000000";var actionPointDiv=$('<div class="actionPointsContainer" style="left: '+pos.x+"px; top: "+pos.y+"px; color: "+color+';">'+text+"</div>");rootElement.append(actionPointDiv);actionPointDiv.animate({top:(parseInt(pos.y,10)-50).toString(),opacity:0},1500)}function allActionPointsAnimator(rootElement,pos,text,players,index,fn){"use strict";if(index>=players.length)return 0;pos.x=pos.x||pos.left||0;pos.y=pos.y||pos.top||0;var color=players[index].color;var actionPointDiv=$('<div class="actionPointsContainer" style="left: '+pos.x+"px; top: "+pos.y+"px; color: "+color+';">'+text+"</div>");rootElement.append(actionPointDiv);actionPointDiv.animate({top:(parseInt(pos.y,10)-50).toString(),opacity:0},1500,allActionPointsAnimator(rootElement,pos,text,players,index+1,allActionPointsAnimator))}function animateTerritory(map,nID,tID,color,duration,delay){map.countries[nID].territories[tID].svgObj.animate(duration,"-",delay).attr({fill:color})}function animateActionPoints(rootElement,gameState,map){"use strict";var t,territory;var allPlayersControlledTerritories=[];for(var i=0;i<gameState.players.length;i++){var controlledTerritories=[];for(var nationIndex=0;nationIndex<gameState.countries.length;nationIndex++){for(var territoryIndex=0;territoryIndex<gameState.countries[nationIndex].territories.length;territoryIndex++){if(gameState.countries[nationIndex].territories[territoryIndex].loyalToWhom===i){controlledTerritories.push({nationID:nationIndex,territoryID:territoryIndex,oldColor:"#FFFFFF"})}}}allPlayersControlledTerritories.push(controlledTerritories)}for(var n=0;n<allPlayersControlledTerritories.length;n++){var territoryThresholds=getTerritoryResourceThresholds();var controlledTerritories=allPlayersControlledTerritories[n];var extraPoints=0;for(t=0;t<territoryThresholds.length;t++){if(controlledTerritories.length>=territoryThresholds[t].threshold){extraPoints+=territoryThresholds[t].value}}if(false&&extraPoints>0){for(t=0;t<controlledTerritories.length;t++){territory=gameState.countries[controlledTerritories[t].nationID].territories[controlledTerritories[t].territoryID];controlledTerritories[t].oldColor=getTerritoryColor(territory,"#CCCCCC",gameState.players[n].color);map.countries[controlledTerritories[t].nationID].territories[controlledTerritories[t].territoryID].svgObj.animate(250,"-",1e3).attr({fill:"#ffffff"}).during(actionPointsAnimator(rootElement,{x:parseInt(rootElement.css("width"))/2,y:parseInt(rootElement.css("height"))/2},"+"+extraPoints.toString(),gameState.players[n].color)).after(function(){animateTerritory(map,controlledTerritories[t].nationID,controlledTerritories[t].territoryID,controlledTerritories[t].oldColor,250,500)})}for(t=0;t<controlledTerritories.length;t++){territory=gameState.countries[controlledTerritories[t].nationID].territories[controlledTerritories[t].territoryID]}}}}function AgentOverview(p_rootDiv,p_playerCount,p_getActionTargetCB,p_showingAtStart,p_styleID){"use strict";this.getActionTarget=p_getActionTargetCB;var self=this;var thisDiv;var agentDivs=[];var showingAtStart=p_showingAtStart||false;var styleID=p_styleID||"";var addAdditionalStyle=styleID===""?false:true;var originalBorderColor;var getAdditionalIDstring=function(addID){if(addID){return'id="'+styleID+'"'}else{return""}};this.setAgents=function(playerIndex,playerColor,agents){clearAgentIcons(playerIndex);for(var agentIndex=0;agentIndex<agents.length;++agentIndex){createAgentIcon(playerIndex,playerColor,agents[agentIndex])}$(thisDiv).css("border-color",hasAgentsFromMultiplePlayers()?"#ff2222":originalBorderColor);updateVisibility()};this.toggleVisibility=function(showing){if(showing){$(thisDiv).show()}else{$(thisDiv).hide()}};this.position=function(anchor){var newX=anchor.x-parseInt($(thisDiv).css("width"),10)/2;var newY=anchor.y-parseInt($(thisDiv).css("height"),10)/2;$(thisDiv).css("top",newY.toString()+"px");$(thisDiv).css("left",newX.toString()+"px")};this.setTooltip=function(containerTooltip){new Opentip(thisDiv[0],containerTooltip.TEXT,containerTooltip.TITLE);for(var playerIndex=0;playerIndex<agentDivs.length;++playerIndex){for(var agentIndex=0;agentIndex<agentDivs[playerIndex].length;++agentIndex){var tooltip=TOOLTIPS.AGENTS.DETAILS.MESSAGE+agentDivs[playerIndex][agentIndex].attr("messageType");new Opentip(agentDivs[playerIndex][agentIndex][0],tooltip,TOOLTIPS.AGENTS.DETAILS.TITLE,{style:"contagionTipsLow"})}}};this.readyAgentOverviewForTargetPick=function(source,playerIndices){for(var arrayIndex=0;arrayIndex<playerIndices.length;++arrayIndex){var playerIndex=playerIndices[arrayIndex];for(var agentIndex=0;agentIndex<agentDivs[playerIndex].length;++agentIndex){agentDivs[playerIndex][agentIndex].children(".agentOverviewColor").addClass("pointerCursor circleHighlight");agentDivs[playerIndex][agentIndex].children(".agentOverviewColor").css("border-color","");agentDivs[playerIndex][agentIndex].bind("click.getTarget",function(event){event.stopPropagation();var targetInfo=getDivInformation(this.id);self.getActionTarget(source,targetInfo)})}}};this.clearAgentPicking=function(){for(var playerIndex=0;playerIndex<agentDivs.length;++playerIndex){for(var agentIndex=0;agentIndex<agentDivs[playerIndex].length;++agentIndex){agentDivs[playerIndex][agentIndex].children(".agentOverviewColor").removeClass("pointerCursor circleHighlight");var agentColor=agentDivs[playerIndex][agentIndex].children(".agentOverviewColor").css("background-color");agentDivs[playerIndex][agentIndex].children(".agentOverviewColor").css("border-color",agentColor);agentDivs[playerIndex][agentIndex].unbind("click.getTarget")}}};var create=function(rootDiv,playerCount){thisDiv=$('<div class="agentOverviewContainer" '+getAdditionalIDstring(addAdditionalStyle)+"></div>").appendTo(rootDiv);originalBorderColor=$(thisDiv).css("border-color");for(var playerIndex=0;playerIndex<playerCount;++playerIndex){agentDivs.push([])}};var clearAgentIcons=function(playerIndex){for(var agentIndex=0;agentIndex<agentDivs[playerIndex].length;++agentIndex){$(agentDivs[playerIndex][agentIndex]).remove()}agentDivs[playerIndex]=[]};var getAgentIcon=function(agent){switch(agent.messageType){case MessageType.POSITIVE:return" agentOverviewIcon-positive";case MessageType.NEGATIVE:return" agentOverviewIcon-negative";case MessageType.FLEXIBLE:return" agentOverviewIcon-flexible";default:return" agentOverviewIcon-default"}};var createAgentIcon=function(playerIndex,playerColor,agent){var divID=playerIndex+":"+agentDivs[playerIndex].length;var agentDiv=$('<div class="agentOverviewAgent" id="'+divID+'" messageType="'+getMessageTypeString(agent.messageType)+'"></div>').appendTo($(thisDiv));var colorDiv=$('<div class="agentOverviewColor" style="background: '+playerColor+"; border-color: "+playerColor+';"></div>').appendTo($(agentDiv));var agentIconClass=getAgentIcon(agent);var iconDiv=$('<div class="agentOverviewIcon'+agentIconClass+'"></div>').appendTo($(colorDiv));agentDivs[playerIndex].push(agentDiv)};var updateVisibility=function(){var visible=false;for(var playerIndex=0;playerIndex<agentDivs.length;++playerIndex){if(agentDivs[playerIndex].length>0){visible=true;break}}self.toggleVisibility(visible)};var getDivInformation=function(divID){var components=divID.split(":");return{player:parseInt(components[0]),agent:parseInt(components[1])}};var hasAgentsFromMultiplePlayers=function(){var numberOfDifferentPlayers=0;for(var playerIndex=0;playerIndex<agentDivs.length;++playerIndex){if(agentDivs[playerIndex].length>0){++numberOfDifferentPlayers}}return numberOfDifferentPlayers>1};var getMessageTypeString=function(messageType){switch(messageType){case MessageType.NEGATIVE:return"Negative";case MessageType.POSITIVE:return"Positive";case MessageType.FLEXIBLE:return"Flexible"}return"Undefined?!?!"};create(p_rootDiv,p_playerCount);this.toggleVisibility(showingAtStart)}function CountryControlIndicator(rootElement){var self=this;var controlIcon='<div class="countryControlIcon"></div>';this.root=rootElement;this.isCountryControlled=function(country){var controllingPlayer=-1;for(var t=0;t<country.territories.length;t++){if(country.territories[t].loyalToWhom===-1){controllingPlayer=-1;break}if(country.territories[t].currentLoyalty!==country.territories[t].maxLoyalty){controllingPlayer=-1;break}else{if(controllingPlayer===-1){controllingPlayer=country.territories[t].loyalToWhom}else{if(controllingPlayer!==country.territories[t].loyalToWhom){controllingPlayer=-1;break}}}}return controllingPlayer};this.updateControlIcons=function(gameState,map){rootElement.children(".countryControlIcon").remove();for(var c=0;c<gameState.countries.length;c++){var currentCountry=gameState.countries[c];var playerLoyalty=self.isCountryControlled(currentCountry);if(playerLoyalty>-1){addIcon(gameState.players[playerLoyalty].ideologyType,gameState.players[playerLoyalty].color,map,c)}}};this.repositionControlIcons=function(map){rootElement.children(".countryControlIcon").each(function(){var center=getNationCenter(map,parseInt($(this).attr("id")));var divHalfWidth=parseInt($(this).css("width"))/2;var divHalfHeight=parseInt($(this).css("height"))/2;$(this).css({left:center.x-divHalfWidth,top:center.y-divHalfHeight})})};var addIcon=function(ideologyID,playerColor,map,nID){var center=getNationCenter(map,nID);var $currDiv=$(controlIcon);$currDiv.attr("id",nID);self.root.append($currDiv);var divHalfWidth=parseInt($currDiv.css("width"))/2;var divHalfHeight=parseInt($currDiv.css("height"))/2;$currDiv.addClass("ideologyType"+ideologyID.toString());$currDiv.css({"background-color":playerColor,left:center.x-divHalfWidth,top:center.y-divHalfHeight})};var getNationCenter=function(map,nID){return map.countries[nID].getCenter()}}function endGameScreen(rootElement,gameState){var self=this;var root=rootElement;var endgameDiv='<div class="endGameScreen"><div class="endGamePopUp"><div class="gameOver">GAME OVER</div></div></div>';var winnerDiv='<div class="winnerContainer"></div>';root.append($(endgameDiv));for(var p=0;p<gameState.winningPlayers.length;p++){var currWinnerDiv=$(winnerDiv);var currWinningPlayer=gameState.players[gameState.winningPlayers[p]];currWinnerDiv.append('<div class="winnerIcon ideologyType'+currWinningPlayer.ideologyType.toString()+'" style="background-color: '+currWinningPlayer.color+'"></div>');currWinnerDiv.append('<div class="winnerIdeologyName">'+currWinningPlayer.ideologyName+"</div>");currWinnerDiv.append('<div class="winnerUserID">'+currWinningPlayer.id+"</div>");root.children(".endGameScreen").children(".endGamePopUp").append(currWinnerDiv)}}function InfoPanel(p_rootDiv,showingAtStart,startingText){"use strict";var rootDiv=p_rootDiv;var text=startingText;var isShowing=showingAtStart;var playerContainers=[];rootDiv.append('<div class="infoPanelContainer"></div>');$(".infoPanelContainer").append('<div class="infoPanelText"></div>');$(".infoPanelContainer").append('<div class="infoPanelUserList"></div>');if(!showingAtStart){$(".infoPanelContainer").hide()}this.updateText=function(p_text){text=p_text;$(".infoPanelText").text(text);return this};this.show=function(){if(isShowing===false){isShowing=true;$(".infoPanelContainer").slideDown("slow",function(){})}};this.hide=function(){if(isShowing===true){isShowing=false;$(".infoPanelContainer").slideUp("slow",function(){})}};this.isVisible=function(){return isShowing};this.updatePlayerStatus=function(userList,ideologyList){var userContainerWidth,currUser,$icon,i,playerIndex;userList=userList||[{name:"Bill",ideologyType:"Billions",color:"#FF0000",hasTakenTurn:false},{name:"Will",ideologyType:"Willions",color:"#00FF00",hasTakenTurn:true},{name:"Jill",ideologyType:"Jillions",color:"#0000FF",hasTakenTurn:false},{name:"Mill",ideologyType:"Millions",color:"#FFFF00",hasTakenTurn:true}];if(playerContainers.length===0){userContainerWidth=100/userList.length-Math.floor(100/userList.length*.1);for(i=0;i<userList.length;i++){currUser=$('<div class="infoPanelUserContainer" style="width: '+userContainerWidth.toString()+'%"></div>');currUser.prepend('<div class="infoPanelUserName"></div>');currUser.prepend('<div class="infoPanelUserIcon"></div>');$(".infoPanelUserList").append(currUser);currUser.children(".infoPanelUserName").html(userList[i].name);playerContainers.push(currUser)}}for(playerIndex=0;playerIndex<playerContainers.length;++playerIndex){currUser=playerContainers[playerIndex];$icon=currUser.children(".infoPanelUserIcon");if(userList[playerIndex].ideologyType>-1&&!$icon.hasClass("ideologyType"+userList[playerIndex].ideologyType)){$icon.addClass("ideologyType"+userList[playerIndex].ideologyType)}$icon.css("background-color",userList[playerIndex].color);$(currUser).toggleClass("infoPanelUserReady",userList[playerIndex].hasTakenTurn,1e3,"easeInOutElastic")}};this.updateText(text)}function MessageTypeSelector(p_parentElement,setMessageTypeCB,p_pos){"use strict";var self=this;var container;var setMessageType=setMessageTypeCB;this.setPosition=function(pos){var padding=container.css("padding");if(padding===""){padding="0"}var width=parseInt(container.width(),10)+parseInt(padding,10);var height=parseInt(container.height(),10)+parseInt(padding,10);container.css("left",pos.x-width/2);container.css("top",pos.y-height/2)};this.remove=function(){container.children().mouseout();container.fadeOut("slow",function(){$(this).remove()})};var create=function(parentElement,pos){container=$('<div class="messageTypeSelectorContainer"></div>').appendTo(parentElement);createMessageTypeButton(container,"positiveMessageType","positive",TOOLTIPS.MESSAGE.POSITIVE);createMessageTypeButton(container,"neutralMessageType","flexible",TOOLTIPS.MESSAGE.FLEXIBLE);createMessageTypeButton(container,"negativeMessageType","negative",TOOLTIPS.MESSAGE.NEGATIVE);self.setPosition(pos);container.hide();container.fadeIn("slow")};var createMessageTypeButton=function(container,messageTypeClass,name,tooltip){var button=$('<div class="messageTypeButton '+messageTypeClass+'" name="'+name+'"></div>').appendTo(container);var overlay=$("<div class='iconOverlay'></div>").appendTo(button);new Opentip(button[0],tooltip.TEXT,tooltip.TITLE);button.click(onMessageTypeClicked)};function onMessageTypeClicked(event){event.stopPropagation();var messageType=MessageType.FLEXIBLE;switch($(this).attr("name")){case"negative":messageType=MessageType.NEGATIVE;break;case"flexible":messageType=MessageType.FLEXIBLE;break;case"positive":messageType=MessageType.POSITIVE;break}setMessageType(messageType);$(document).trigger("MessageTypeClicked")}create(p_parentElement,p_pos)}function OptionsPanel(rootElement){var self=this;var optionsPanelElement='<div class="optionsPanelContainer">                    <div class="optionsPanelButton btnSoundToggleOn" id="toggleAudio"><div class="iconOverlay"></div></div>                    <div class="optionsPanelButton btnTooltipsToggleOn" id="toggleTips"><div class="iconOverlay"></div></div>                    </div>';var $optionsPanel=$(optionsPanelElement);$optionsPanel.children("#toggleAudio").click(onAudioToggle);$optionsPanel.children("#toggleTips").click(onTooltipToggle);rootElement.append($optionsPanel);this.setTooltips=function(){new Opentip($("#toggleAudio")[0],TOOLTIPS.OPTIONS.SOUNDS.TEXT,TOOLTIPS.OPTIONS.SOUNDS.TITLE);new Opentip($("#toggleTips")[0],TOOLTIPS.OPTIONS.TOOLTIPS.TEXT,TOOLTIPS.OPTIONS.TOOLTIPS.TITLE)};function onAudioToggle(){var enableAudio=$(this).hasClass("btnSoundToggleOn")?false:true;var newClass=enableAudio?"btnSoundToggleOn":"btnSoundToggleOff";$(this).removeClass("btnSoundToggleOn btnSoundToggleOff");$(this).addClass(newClass);$(document).trigger("AudioEnabled",enableAudio);$(document).trigger("ButtonClicked")}function onTooltipToggle(){var enableTips=$(this).hasClass("btnTooltipsToggleOn")?false:true;var newClass=enableTips?"btnTooltipsToggleOn":"btnTooltipsToggleOff";$(this).removeClass("btnTooltipsToggleOn btnTooltipsToggleOff");$(this).addClass(newClass);Opentip.setEnabled(enableTips);$(document).trigger("ButtonClicked");gameOptions.enableTooltips=enableTips}}function PlaybackControls(rootElement){var self=this;var playbackElement='<div class="playbackControlsContainer">                    <div class="playbackButton playbackStart"><div class="iconOverlay"></div></div>                    <div class="playbackButton playbackBack"><div class="iconOverlay"></div></div>                    <div class="playbackCurrentState"><p class="playbackCurrentStateText"></p></div>                    <div class="playbackButton playbackForward"><div class="iconOverlay"></div></div>                    <div class="playbackButton playbackEnd"><div class="iconOverlay"></div></div>                    </div>';var $playbackDiv=$(playbackElement);rootElement.append($playbackDiv);this.setTooltips=function(){new Opentip($(".playbackStart")[0],TOOLTIPS.PLAYBACK.START.TEXT,TOOLTIPS.PLAYBACK.START.TITLE);new Opentip($(".playbackBack")[0],TOOLTIPS.PLAYBACK.BACK.TEXT,TOOLTIPS.PLAYBACK.BACK.TITLE);new Opentip($(".playbackCurrentState")[0],TOOLTIPS.PLAYBACK.CURRENT.TEXT,TOOLTIPS.PLAYBACK.CURRENT.TITLE);new Opentip($(".playbackForward")[0],TOOLTIPS.PLAYBACK.FORWARD.TEXT,TOOLTIPS.PLAYBACK.FORWARD.TITLE);new Opentip($(".playbackEnd")[0],TOOLTIPS.PLAYBACK.END.TEXT,TOOLTIPS.PLAYBACK.END.TITLE)};this.setCurrentTurnNumber=function(stateNum){$playbackDiv.children(".playbackCurrentState").children(".playbackCurrentStateText").text(stateNum)};self.setCurrentTurnNumber("")}function Scoreboard(pageRoot){"use strict";this.root=$('<div class="scoreboard" id="thewholescoreboard">');var self=this;var $countryRows=[];pageRoot.append(this.root);$(self.root).append("<div class='scoreboardContainer' id='scoreboardContainer'></div>");$("#scoreboardContainer").append("<div class='scoreboardTopBar'><p class='scoreboardHeaderText'>SCOREBOARD</p></div>");this.PlayerRow='<div class="scoreboardPlayer">                    <div class="turnSubmitted turnSubmitted-disabled"></div>                    <div class="ideologyName"></div>                    <div class="userIdName"></div>                    <div class="playerNameIcon"></div>                    <div class="countryBonus"></div>                    <div class="countryScore"></div>                    <div class="playerScoresSpacer"></div>                    <div class="territoryScore"></div>                    <div class="territoryBonus"></div>                    </div>                    <div class="playerSpacer"></div>';this.createScoreBars=function(scoreData){var parentWidth=$("#scoreboardContainer").width()*.65;var countryScoreWidth=$(".countryScore").width();var countrySegWidth=parentWidth/scoreData.numCountries;var territorySegWidth=parentWidth/scoreData.numTerritories;var barAttr={stroke:"black","stroke-width":1,fill:"gray"};var altColorBar=function(i){return i%2>0?" individualScoreAlt":""};var nextBonus=function(tNum,territoryThresholds){var retVal="";for(var i=0;i<territoryThresholds.length;i++){if(tNum+1<territoryThresholds[i].threshold){return retVal+""}else{retVal=" territoryBonus"+i.toString()}}return retVal};var $barGraphContainers=$("#scoreboardContainer .countryScore");var $playerRows=$("#scoreboardContainer .scoreboardPlayer");var i,p;for(p=0;p<$barGraphContainers.length;p++){var currCountryElem=$barGraphContainers.get(p);var controlledCountryCount=0;var $rowElement=$playerRows.eq(p);for(i=0;i<scoreData.numCountries;i++){var currCountryScore=$('<div class="individualCountryScore'+altColorBar(i)+'" style="width: '+100/scoreData.numCountries+'%"></div>');$rowElement.children(".countryScore").append(currCountryScore);if(i<$rowElement.data("countriesControlled")){var amount=$rowElement.data("controlledCountryResources")[controlledCountryCount];var currCountryBonus=$('<div class="individualCountryBonus" style="width: '+100/scoreData.numCountries+'%">+'+amount.toString()+"</div>");$rowElement.children(".countryBonus").append(currCountryBonus);controlledCountryCount++;currCountryScore.animate({backgroundColor:"#FFFFFF"},"slow")}}var territoryBonusThresholds=getTerritoryResourceThresholds();var territoriesControlled=$playerRows.eq(p).data("territoriesControlled");for(i=0;i<scoreData.numTerritories;i++){var currTerritoryScore=$('<div class="individualTerritoryScore'+nextBonus(i,territoryBonusThresholds)+altColorBar(i)+'" style="width: '+100/scoreData.numTerritories+'%"></div>');$rowElement.children(".territoryScore").append(currTerritoryScore);if(i<territoriesControlled){currTerritoryScore.animate({backgroundColor:"#FFFFFF"},"slow")}}var territoryBonusDiv='<div class="individualTerritoryBonus"></div>';var firstTerritoryBonusDiv=$(territoryBonusDiv);firstTerritoryBonusDiv.css("background","none");var firstDivWidth=Math.min(scoreData.numTerritories,territoryBonusThresholds[0].threshold-1)/scoreData.numTerritories*100;firstTerritoryBonusDiv.css("width",firstDivWidth.toString()+"%");$rowElement.children(".territoryBonus").append(firstTerritoryBonusDiv);for(var t=0;t<territoryBonusThresholds.length;t++){var territoryThreshold=territoryBonusThresholds[t];var currTerritoryBonusDiv=$(territoryBonusDiv);var nextThreshold=t+1<territoryBonusThresholds.length?territoryBonusThresholds[t+1].threshold-1:scoreData.numTerritories;var divWidth=(Math.min(nextThreshold,scoreData.numTerritories)-(territoryThreshold.threshold-1))/scoreData.numTerritories*100;currTerritoryBonusDiv.css("width",divWidth.toString()+"%");var $tickmark=$('<div class="territoryBonusTickMark"><div class="territoryBonusTickText">+'+territoryThreshold.value.toString()+"</div></div>");if(territoriesControlled<territoryThreshold.threshold){$tickmark.children(".territoryBonusTickText").addClass("territoryBonusTickTextDisabled");$tickmark.addClass("territoryBonusTickDisabled")}currTerritoryBonusDiv.append($tickmark);$rowElement.children(".territoryBonus").append(currTerritoryBonusDiv)}}};this.setPlayerScores=function(gameState,currentPlayerIndex){var scoreData={};$countryRows=[];$("#scoreboardContainer .scoreboardPlayer").remove();$(".playerSpacer").remove();for(var playerIdx=0;playerIdx<gameState.players.length;playerIdx++){var countriesControlled=0;var territoriesControlled=0;var territoryCount=0;var controlledCountryResources=[];for(var countryIdx=0;countryIdx<gameState.countries.length;countryIdx++){var country=gameState.countries[countryIdx];if(playerControlsCountry(country,playerIdx)){++countriesControlled;controlledCountryResources.push(getCountryResources(country))}territoriesControlled+=getNumberOfLoyalTerritories(country,playerIdx);territoryCount+=country.territories.length}var $countryRow=$(self.PlayerRow);$countryRow.data("countriesControlled",countriesControlled);$countryRow.data("territoriesControlled",territoriesControlled);$countryRow.data("controlledCountryResources",controlledCountryResources);$countryRow.data("playerIndex",playerIdx);$countryRows.push($countryRow)}self.setNames(gameState.players);self.setColors(gameState.players);var currentPlayerRow=$($countryRows[currentPlayerIndex][0]);currentPlayerRow.addClass("highlightCurrentPlayer");currentPlayerRow.css("background",gameState.players[currentPlayerIndex].color);$countryRows.splice(0,0,$countryRows.splice(currentPlayerIndex,1)[0]);$("#scoreboardContainer").append($countryRows);scoreData.numCountries=numberOfCountriesNeededToWin(gameState);scoreData.numTerritories=numberOfTerritoriesNeededToWin(gameState);self.createScoreBars(scoreData)};this.setColors=function(playerList){for(var playerRow=0;playerRow<$countryRows.length;playerRow++){var i=$countryRows[playerRow].data("playerIndex");if(playerList[i].ideologyType>-1&&!$countryRows[playerRow].children(".playerNameIcon").hasClass("ideologyType"+playerList[i].ideologyType)){$countryRows[playerRow].children(".playerNameIcon").addClass("ideologyType"+playerList[i].ideologyType);$countryRows[playerRow].children(".playerNameIcon").css("background-color",playerList[i].color)}}};this.setNames=function(playerList){for(var elementIdx=0;elementIdx<$countryRows.length;elementIdx++){var i=$countryRows[elementIdx].data("playerIndex");var ideologyName=playerList[i].ideologyName;$countryRows[elementIdx].children(".ideologyName").text(ideologyName===null?"default":ideologyName);$countryRows[elementIdx].children(".userIdName").text(playerList[i].id)}};this.setWinningPlayers=function(winningPlayers){};this.setTooltips=function(){for(var elementIdx=0;elementIdx<$countryRows.length;elementIdx++){var $countryRow=$countryRows[elementIdx];new Opentip($countryRow.find(".countryScore")[0],TOOLTIPS.SCOREBOARD.COUNTRY.TEXT,TOOLTIPS.SCOREBOARD.COUNTRY.TITLE);new Opentip($countryRow.find(".territoryScore")[0],TOOLTIPS.SCOREBOARD.TERRITORY.TEXT,TOOLTIPS.SCOREBOARD.TERRITORY.TITLE)}};this.toggleVisibility=function(visible){if(visible){this.root.css("visibility","visible")}else{this.root.css("visibility","hidden")}return this};this.isVisible=function(){return this.root.css("visibility")==="visible"};this.updatePlayerStatus=function(userList,ideologyList){var $playerRows=$("#scoreboardContainer .scoreboardPlayer");for(var i=0;i<$playerRows.length;i++){var $currPlayer=$($playerRows[i]);var currPlayerID=parseInt($currPlayer.data("playerIndex"));$currPlayer.find(".turnSubmitted").toggleClass("turnSubmitted-disabled",!userList[currPlayerID].hasTakenTurn,1e3,"easeInOutElastic")}}}function PlayerSetup($root,availableColors,availableIdeologies,setupCompleteCB){"use strict";var hasIdeologyBeenFocused=false;var self=this;var $divParent=$root;var $divText=$('    <div id="playerSetupRoot">          <div class="playerSetupContainer">               <div class="playerSetupTopBar">                   <p class="playerSetupHeaderText">PLAYER INFORMATION</p>               </div>               <div class="ideologyNameRoot">                   <div class="textLabelIdeologyName">Ideology Name:</div>                   <input id="ideologyNameInput" class="textInputField" value="" maxlength="15"></input>               </div>               <div class="ideologyTypeRoot">                   <div class="textLabelIdeologyType">Ideology Type:</div>                   <select class="comboIdeologyType">                   </select>               </div>               <div class="colorPickRoot">                     <div class="colorPickLabel">Color:</div>                     <span id="colorRadioButtons">                     </span>                 </div>               <div class="submitRoot">                   <button id="playerSetupSubmitButton" class="submitButton">Submit</button>               </div>           </div>       </div>');
$root.append($divText);this.updateOptions(availableIdeologies,availableColors);$(".comboIdeologyType").prop("selectedIndex",-1);var defaultName=$("#ideologyNameInput").val();this.remove=function(){$("#playerSetupRoot").remove()};$(".textInputField").focus(function(){if(!hasIdeologyBeenFocused){this.value="";hasIdeologyBeenFocused=true}});$("#playerSetupSubmitButton").click(function(e){if(!$("#ideologyNameInput").val()||$("#ideologyNameInput").val()===defaultName){alert("Please enter a name.");return}if($(".comboIdeologyType").prop("selectedIndex")===-1){alert("Please select your ideology type.");return}if($("#colorRadioButtons > input[name=colorSet]:checked").size()===0){alert("Please select a color.");return}var color=$("#colorRadioButtons > input[name=colorSet]:checked + label")[0].style.borderColor;color=self.getHexFromRgb(color);setupCompleteCB({ideologyName:$("#ideologyNameInput").val(),ideologyType:$(".comboIdeologyType :selected").val(),color:color})})}PlayerSetup.prototype.hex=function(x){return("0"+parseInt(x).toString(16)).slice(-2)};PlayerSetup.prototype.getHexFromRgb=function(color){if(color.indexOf("rgb")!==-1){color=color.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/);color="#"+this.hex(color[1])+this.hex(color[2])+this.hex(color[3]);return color.toUpperCase()}};PlayerSetup.prototype.updateOptions=function(availableIdeologies,availableColors){var $selectedIdeology=$(".comboIdeologyType").val();var $selectedColor=$("#colorRadioButtons input[name=colorSet]:checked + label");var hexColor=$selectedColor.length>0&&this.getHexFromRgb($selectedColor.css("border-color"));$(".comboIdeologyType").empty();$("#colorRadioButtons").empty();var foundMacthingIdeologySelection=false;availableIdeologies.forEach(function(type){var option=$('<option value="'+type+'">'+type+"</option>");var matches=type===$selectedIdeology;option.prop("selected",matches);$(".comboIdeologyType").append(option);foundMacthingIdeologySelection=foundMacthingIdeologySelection||matches});if($selectedIdeology===null||!foundMacthingIdeologySelection){$(".comboIdeologyType").prop("selectedIndex",-1)}availableColors.forEach(function(color){var colorName=color.slice(1).toUpperCase();var input=$('<input type="radio" id="'+colorName+'" name="colorSet" class="colorRadio" type="radio" >');var label=$('<label for="'+colorName+'"></label>');input.prop("checked",hexColor.length>0&&hexColor.indexOf(colorName)!==-1);$("#colorRadioButtons").append(input).append(label);$("#"+colorName+" + LABEL").css("border-color",color).css("background",color)})};function ScopeSelector(p_parentElement,setScopeCB,p_pos,p_messageType,p_agentScopesEnabled){"use strict";var self=this;var container;var setScope=setScopeCB;this.setPosition=function(pos){var padding=container.css("padding");if(padding===""){padding="0"}var width=parseInt(container.width(),10)+parseInt(padding,10);var height=parseInt(container.height(),10)+parseInt(padding,10);container.css("left",pos.x-width/2);container.css("top",pos.y-height/2)};this.remove=function(){container.children().mouseout();container.fadeOut("slow",function(){$(this).remove()})};var create=function(parentElement,pos,messageType,agentScopesEnabled){container=$('<div class="scopeSelectorContainer"></div>').appendTo(parentElement);createScopeButton(container,"globalScopeButton","global",TOOLTIPS.SCOPE.GLOBAL,messageType);createScopeButton(container,"broadScopeButton","broad",TOOLTIPS.SCOPE.BROAD,messageType,agentScopesEnabled);createScopeButton(container,"localScopeButton","local",TOOLTIPS.SCOPE.LOCAL,messageType,agentScopesEnabled);self.setPosition(pos);container.hide();container.fadeIn("slow")};var createScopeButton=function(container,messageTypeClass,name,tooltip,messageType,agentScopesEnabled){var button=$('<div class="scopeButton '+messageTypeClass+'" name="'+name+'"></div>').appendTo(container);var overlay=$("<div class='iconOverlay'></div>").appendTo(button);new Opentip(button[0],tooltip.TEXT,getTooltipTitle(tooltip.TITLE,messageType));if(agentScopesEnabled===false){button.attr("disabled",true);overlay.attr("disabled",true)}else{button.click(onScopeClicked)}};var getTooltipTitle=function(tooltip,messageType){switch(messageType){case MessageType.POSITIVE:return tooltip.POSITIVE;case MessageType.NEGATIVE:return tooltip.NEGATIVE}return tooltip.POSITIVE};function onScopeClicked(event){event.stopPropagation();var scope=ActionScope.LOCAL;switch($(this).attr("name")){case"global":scope=ActionScope.GLOBAL;break;case"broad":scope=ActionScope.BROAD;break;case"local":scope=ActionScope.LOCAL;break}setScope(scope);$(document).trigger("ScopeClicked")}create(p_parentElement,p_pos,p_messageType,p_agentScopesEnabled)}function TargetSelector(p_parentElement,p_playerList,p_currentPlayerIndex,setTargetCB){"use strict";var self=this;var container;var setTarget=setTargetCB;this.setPosition=function(pos){var width=parseInt(container.css("width"),10)+parseInt(container.css("padding"),10);var height=parseInt(container.css("height"),10)+parseInt(container.css("padding"),10);container.css("left",pos.x-width/2);container.css("top",pos.y-height/2)};this.setTooltips=function(){container.children().each(function(){var tooltip=TOOLTIPS.TARGET.TEXT+$(this).attr("targetname");new Opentip(this,tooltip,TOOLTIPS.TARGET.TITLE)})};this.show=function(pos){if(container.children().length===1){container.children()[0].click()}else{self.setPosition(pos);container.fadeIn("slow")}};this.hide=function(){container.children().mouseout();container.fadeOut("slow")};this.isVisible=function(pos){return container.is(":visible")};var create=function(parentElement,playerList,currentPlayerIndex){container=$('<div class="targetSelectorContainer"></div>').appendTo(parentElement);for(var playerIndex=0;playerIndex<playerList.length;++playerIndex){if(playerIndex!==currentPlayerIndex){createTargetButton(container,playerList[playerIndex],playerIndex)}}container.hide()};var createTargetButton=function(container,player,playerIndex){var button=$('<div class="targetButton ideologyType'+player.ideologyType+'" name="'+playerIndex+'" targetname="'+player.name+'"></div>').appendTo(container);button.css({"background-color":player.color});button.click(onTargetClicked);var overlay=$('<div class="iconOverlay"></div>').appendTo(button)};function onTargetClicked(event){event.stopPropagation();setTarget(parseInt($(this).attr("name")));$(document).trigger("TargetClicked")}create(p_parentElement,p_playerList,p_currentPlayerIndex)}function UI(mapLoadedCB,addActionCB,removeActionCB,clearActionsCB,submitTurnCB){"use strict";this.mapLoaded=mapLoadedCB;this.addAction=addActionCB;this.submitTurn=submitTurnCB;if(window.attachEvent){window.attachEvent("onresize",onWindowResize)}else if(window.addEventListener){window.addEventListener("resize",onWindowResize,false)}var self=this;var rootElement=$("body");var currentPlayerIndex=-1;var currentAgentCount=0;var currentActionButton=null;var currentAction="";var validCountriesForAction=[];var gettingActionSource=false;var gettingActionDestination=false;var messageTypeSelector=null;var scopeSelector=null;var targetSelector=null;var playerSetup=null;var usingDesperation=false;var usingNonDesperationAction=false;this.infoPanel=new InfoPanel(rootElement,false,"Welcome to Contagion, the game of contagions");this.map=new GameMap(rootElement);this.mapAnimator=new GameMapAnimator(this.map);this.actionBar=new ActionBar(actionClicked).hide();this.actionList=new ActionList(rootElement,removeActionCB,localClearActionsCB,submitTurn).hide();this.scoreboard=new Scoreboard(rootElement).toggleVisibility(false);this.disabledAgentsView=null;this.playbackControls=new PlaybackControls(rootElement);this.optionsPanel=new OptionsPanel(rootElement);this.countryControlIndicator=new CountryControlIndicator(rootElement);this.buildSetupPlayerUI=function(availableColors,availableIdeologies,setupResultCallback){self.infoPanel.updateText("Enter Player Info").show();if(playerSetup===null){playerSetup=new PlayerSetup(rootElement,availableColors,availableIdeologies,setupResultCallback)}else{playerSetup.updateOptions(availableIdeologies,availableColors)}};this.removeSetupPlayerUI=function(){playerSetup.remove();playerSetup=null};this.buildWaitingForSetupUI=function(){self.infoPanel.updateText("Waiting for other player to finish setup").show()};this.buildSetupGameUI=function(gameState,playerID,playerIndex){setupGameUI("Recruit an agent to your starting location, "+playerID,gameState,playerIndex);$(document).trigger("GameSetup")};this.buildNormalGameUI=function(gameState,playerID,playerIndex,currentResources){setupGameUI("Add actions or submit your turn, "+playerID,gameState,playerIndex);$(document).trigger("NewRound")};this.buildEndGameUI=function(gameState,playerID,playerIndex){setupGameUI("The game is over, "+playerID,gameState,playerIndex);self.actionList.hide();self.actionBar.hide();self.scoreboard.setWinningPlayers(gameState.winningPlayers);endGameScreen(rootElement,gameState)};this.updateGameState=function(gameState){var countryIndex,country,playerColor,playerIndex,agents;currentAgentCount=0;for(countryIndex=0;countryIndex<gameState.countries.length;++countryIndex){country=gameState.countries[countryIndex];for(playerIndex=0;playerIndex<country.agents.length;++playerIndex){playerColor=gameState.players[playerIndex].color;agents=country.agents[playerIndex];if(playerIndex===currentPlayerIndex){currentAgentCount+=agents.length}self.map.countries[countryIndex].setAgents(playerIndex,playerColor,agents)}self.map.countries[countryIndex].setAgentOverviewTooltip(TOOLTIPS.AGENTS.CONTAINER)}for(playerIndex=0;playerIndex<gameState.players.length;++playerIndex){playerColor=gameState.players[playerIndex].color;agents=gameState.players[playerIndex].disabledAgents;self.disabledAgentsView.setAgents(playerIndex,playerColor,agents)}self.disabledAgentsView.setTooltip(TOOLTIPS.AGENTS.DISABLED_CONTAINER);self.disabledAgentsView.toggleVisibility(true);self.infoPanel.updatePlayerStatus(gameState.players,gameState.ideologyTypes);self.scoreboard.updatePlayerStatus(gameState.players,gameState.ideologyTypes);if(!gameState.players[currentPlayerIndex].hasTakenTurn&&!usingDesperation){updateActiveActions(gameState)}else{self.actionBar.setInteractive(false)}self.countryControlIndicator.updateControlIcons(gameState,self.map);self.playbackControls.setCurrentTurnNumber(gameState.currentTurnIndex)};this.undoEscapeAction=function(countryIndex){var country=self.map.countries[countryIndex];country.undoAgentEscape()};this.updateActionCosts=function(currentResources,taxes,currentCosts,gameState,playerID){self.actionList.setResources(currentResources,taxes,currentCosts,gameState,playerID)};this.updateCurrentActionList=function(actions){function applyHighlights(action,shouldHighlight){var countryIndices=[];action.source!==-1&&countryIndices.push(action.source);action.target!==-1&&countryIndices.push(action.destination);countryIndices.forEach(function(index){if(action.source!==-1){self.map.countries[action.source].highlightCountry(shouldHighlight)}})}function onActionMouseEnter(e,action){applyHighlights(action,true)}function onActionMouseLeave(e,action){applyHighlights(action,false)}usingDesperation=false;usingNonDesperationAction=false;self.actionList.clearActions();for(var actionIndex=0;actionIndex<actions.length;++actionIndex){if(actions[actionIndex]instanceof Desperation){usingDesperation=true}else{usingNonDesperationAction=true}self.actionList.addAction(actions[actionIndex],onActionMouseEnter,onActionMouseLeave)}};this.updatePlayerList=function(playerData,ideologyTypes){if(self.infoPanel.isVisible()){self.infoPanel.updatePlayerStatus(playerData.players,ideologyTypes);self.scoreboard.updatePlayerStatus(playerData.players,ideologyTypes)}if(self.scoreboard.isVisible()){for(var i=0;i<playerData.players.length;++i){self.scoreboard.setColors(playerData.players);self.scoreboard.setNames(playerData.players)}}};this.enableSubmitButton=function(enabled){self.actionList.enableSubmitButton(enabled)};function localClearActionsCB(){$(document).trigger("ActionCanceled");clearActionsCB()}function actionClicked(action){cleanupActionSetup();$("body").bind("click.cancelAction",function(){$(document).trigger("ActionCanceled");cancelCurrentAction()});currentActionButton=action;currentAction=action.attr("name");createAction();var tip=Opentip.getTip(action[0]);if(tip){tip.hide()}$(document).trigger("ButtonClicked")}function onCountryClicked(e,country){country.stopPulse();if(gettingActionDestination){setActionDestination(country)}else if(gettingActionSource){setActionSource(country)}}function onCountryMouseOver(e,country){if(gettingActionDestination||gettingActionSource){country.startPulse()}}function onCountryMouseOut(e,country){country.stopPulse();if(gettingActionDestination||gettingActionSource){country.highlightCountry(true)}else{country.highlightCountry(false)}}function submitTurn(){usingDesperation=false;usingNonDesperationAction=false;self.infoPanel.updateText("Waiting for other player to submit their turn").show();self.actionBar.setInteractive(false);self.actionList.setInteractive(false);self.submitTurn();$(document).trigger("ButtonClicked");$(document).trigger("TurnSubmitted")}function onWindowResize(){self.countryControlIndicator.repositionControlIcons(self.map);for(var countryIndex=0;countryIndex<self.map.countries.length;++countryIndex){self.map.countries[countryIndex].positionAgentOverview()}if(messageTypeSelector!==null){messageTypeSelector.setPosition(getCurrentActionButtonPosition())}if(scopeSelector!==null){scopeSelector.setPosition(getCurrentActionButtonPosition())}if(targetSelector.isVisible()){targetSelector.setPosition(getCurrentActionButtonPosition())}}var setupGameUI=function(infoMessage,gameState,playerIndex){currentPlayerIndex=playerIndex;var playerNames=getPlayerNames(gameState.players);self.actionList.setPlayerNames(playerNames);self.scoreboard.setPlayerScores(gameState,currentPlayerIndex);var interactiveUI=!gameState.players[currentPlayerIndex].hasTakenTurn;self.actionBar.setInteractive(interactiveUI).show();self.actionList.setInteractive(interactiveUI).show();self.scoreboard.toggleVisibility(true);if(interactiveUI){self.infoPanel.updateText(infoMessage).show()}else{self.infoPanel.updateText("Waiting for other player to submit their turn").show()}targetSelector=new TargetSelector(rootElement,gameState.players,currentPlayerIndex,setActionPlayerTarget);drawGameBoard(gameState)};var drawGameBoard=function(gameState){if(!self.map.isLoaded()){var mapUrl="maps/continent.svg";self.map.loadMap(mapUrl,function(){for(var countryIndex=0;countryIndex<gameState.countries.length;++countryIndex){self.map.countries[countryIndex].createAgentOverview(gameState.players,setActionAgentTarget)}onMapLoaded(gameState);self.mapAnimator.animateMapScaleIn();$("#map").on("countryClicked",onCountryClicked);$("#map").on("countryMouseOver",onCountryMouseOver);$("#map").on("countryMouseOut",onCountryMouseOut)})}else{onMapLoaded(gameState);if(Math.random()>.5){self.mapAnimator.animateMapSplitApart()}else{self.mapAnimator.animateMapJiggle()}}};var onMapLoaded=function(gameState){var loyaltyText;for(var countryIndex=0;countryIndex<gameState.countries.length;++countryIndex){var country=gameState.countries[countryIndex];var countryControlled=self.countryControlIndicator.isCountryControlled(country);for(var territoryIndex=0;territoryIndex<country.territories.length;++territoryIndex){var territory=country.territories[territoryIndex];var color="#CCCCCC";var loyalty=territory.loyalToWhom;if(loyalty>-1){color=getTerritoryColor(territory,color,gameState.players[loyalty].color);loyaltyText=getTerritoryLoyaltyPercentageString(territory);self.map.countries[countryIndex].addLoyalPlayer(loyalty);if(countryControlled<0)self.map.countries[countryIndex].territories[territoryIndex].setText(loyaltyText)}self.map.countries[countryIndex].territories[territoryIndex].setColor(color)}for(var playerIndex=0;playerIndex<country.agents.length;++playerIndex){var playerColor=gameState.players[playerIndex].color;var agents=country.agents[playerIndex];self.map.countries[countryIndex].setAgents(playerIndex,playerColor,agents);if(playerIndex===currentPlayerIndex){self.map.countries[countryIndex].setEscapableAgentCount(country.agents[playerIndex].length)}}}self.disabledAgentsView=new AgentOverview(rootElement,gameState.players.length,setActionAgentTarget,true,"disabledAgents");for(var playerIndex=0;playerIndex<gameState.players.length;++playerIndex){var playerColor=gameState.players[playerIndex].color;var agents=gameState.players[playerIndex].disabledAgents;self.disabledAgentsView.setAgents(playerIndex,playerColor,agents)}self.disabledAgentsView.toggleVisibility(true);self.disabledAgentsView.position({x:300,y:115});self.actionList.setCountryNames(getCountryNames(self.map.countries));loadTooltipsScript(gameState.players[currentPlayerIndex].ideologyType);self.mapLoaded();animateActionPoints(rootElement,gameState,self.map);self.actionList.toggleContainers(false)};var loadTooltipsScript=function(ideologyType){var tooltipsScript="";switch(ideologyType){case IdeologyTypes.STATE:tooltipsScript="tooltips-State.js";break;case IdeologyTypes.RELIGIOUS:tooltipsScript="tooltips-Religious.js";break;case IdeologyTypes.NATIONALIST:tooltipsScript="tooltips-Nationalist.js";break;case IdeologyTypes.MARXIST:tooltipsScript="tooltips-Marxist.js";break}if(tooltipsScript!==""){$.getScript(tooltipsScript,onTooltipsLoaded)}};var onTooltipsLoaded=function(){self.actionBar.setActionTooltips();self.disabledAgentsView.setTooltip(TOOLTIPS.AGENTS.DISABLED_CONTAINER);for(var countryIndex=0;countryIndex<self.map.countries.length;++countryIndex){self.map.countries[countryIndex].setAgentOverviewTooltip(TOOLTIPS.AGENTS.CONTAINER)}targetSelector.setTooltips();self.scoreboard.setTooltips();self.optionsPanel.setTooltips();self.playbackControls.setTooltips()};var updateActiveActions=function(gameState){self.actionBar.enableAction(canActivateAgent(),Recruit);self.actionBar.enableAction(currentAgentCount>0,Shift);self.actionBar.enableAction(currentAgentCount>0,Withdraw);var moveEnabled=false,escapeEnabled=false,disableEnabled=false,removeEnabled=false;for(var countryIndex=0;countryIndex<self.map.countries.length;++countryIndex){var country=self.map.countries[countryIndex];moveEnabled=moveEnabled||isValidAction(country,new Move);escapeEnabled=escapeEnabled||isValidAction(country,new Escape);disableEnabled=disableEnabled||isValidAction(country,new Disable);removeEnabled=removeEnabled||isValidAction(country,new Remove)}moveEnabled=moveEnabled||gameState.players[currentPlayerIndex].disabledAgents.length>0&&canActivateAgent();self.actionBar.enableAction(gameState.phase!==GamePhase.SETUP,Boost);self.actionBar.enableAction(gameState.phase!==GamePhase.SETUP,Attack);self.actionBar.enableAction(moveEnabled,Move);self.actionBar.enableAction(escapeEnabled,Escape);self.actionBar.enableAction(disableEnabled,Disable);self.actionBar.enableAction(removeEnabled,Remove);self.actionBar.enableAction(!usingNonDesperationAction&&canUseDesperation(gameState),Desperation)};var willCountryAcceptAction=function(country){for(var countryIndex=0;countryIndex<validCountriesForAction.length;++countryIndex){if(validCountriesForAction[countryIndex]===country){return true}}return false};var canActivateAgent=function(){return currentAgentCount<3};var isValidAction=function(country,action){var actionValid=false;if(action instanceof Desperation){actionValid=true}else if(action instanceof Recruit&&!country.hasBeenEscapedFrom()){actionValid=true}else if(country.getAgentCount(currentPlayerIndex)>0){if(action instanceof Move||action instanceof Shift||action instanceof Withdraw){actionValid=true}else if(action instanceof Boost&&country.hasPositiveAgents(currentPlayerIndex)){actionValid=true}else if(action instanceof Attack&&country.hasOpposingLoyalty(currentPlayerIndex)&&country.hasNegativeAgents(currentPlayerIndex)){actionValid=true}if((action instanceof Escape||action instanceof Disable||action instanceof Remove)&&country.hasOpposingAgents(currentPlayerIndex)&&country.getEscapableAgentCount()>0){actionValid=true}}return actionValid};var areAgentScopesValid=function(){for(var countryIndex=0;countryIndex<self.map.countries.length;++countryIndex){if(isValidAction(self.map.countries[countryIndex],currentAction)){return true}}return false};var canUseDesperation=function(gameState){if(!gameState.players[currentPlayerIndex].usedDesperation){var currentScore=getPlayerScore(gameState,currentPlayerIndex);for(var playerIndex=0;playerIndex<gameState.players.length;++playerIndex){if(playerIndex!=currentPlayerIndex&&getPlayerScore(gameState,playerIndex)-currentScore>=10){return true}}}return false};var createAction=function(){switch(currentAction){case"attack":currentAction=createAttackAction();break;case"boost":currentAction=createBoostAction();break;case"desperation":currentAction=createDesperationAction();break;case"disable":currentAction=createDisableAction();break;case"escape":currentAction=createEscapeAction();break;case"move":currentAction=createMoveAction();break;case"recruit":currentAction=createRecruitAction();break;case"remove":currentAction=createRemoveAction();break;case"shift":currentAction=createShiftAction();break;case"withdraw":currentAction=createWithdrawAction();break}if(typeof currentAction!=="string"&&!(currentAction instanceof String)){buildAction()}};var buildAction=function(){var isComplete=true;var parameters;if(currentAction instanceof Attack){parameters=["scope"];if(currentAction.scope===ActionScope.GLOBAL){parameters.push("target")}else if(currentAction.scope===ActionScope.LOCAL){parameters.push("source")}isComplete=addActionParameters(parameters)}if(currentAction instanceof Boost){parameters=["scope"];if(currentAction.scope===ActionScope.LOCAL){parameters.push("source")}isComplete=addActionParameters(parameters)}if(currentAction instanceof Desperation){isComplete=addActionParameters([])}if(currentAction instanceof Disable){isComplete=addActionParameters(["agentIndex"])}if(currentAction instanceof Escape){isComplete=addActionParameters(["agentIndex","destination"])}if(currentAction instanceof Move){isComplete=addActionParameters(["agentIndex","destination"])}if(currentAction instanceof Recruit){parameters=["messageType"];if(currentAction.messageType===MessageType.NEGATIVE){parameters.push("target")}parameters.push("source");isComplete=addActionParameters(parameters)}if(currentAction instanceof Remove){isComplete=addActionParameters(["agentIndex"])}if(currentAction instanceof Shift){parameters=["agentIndex","messageType"];if(currentAction.messageType===MessageType.NEGATIVE){parameters.push("target")}isComplete=addActionParameters(parameters)}if(currentAction instanceof Withdraw){isComplete=addActionParameters(["agentIndex"])}if(isComplete){submitCurrentAction()}};var addActionParameters=function(parameters){var parameter,isComplete;for(var paramIndex=0;paramIndex<parameters.length;++paramIndex){parameter=parameters[paramIndex];if(currentAction[parameter]===-1){isComplete=false;switch(parameter){case"source":getActionSource();return false;case"destination":getActionDestination();return false;case"target":getActionPlayerTarget();return false;case"agentIndex":getActionAgentTarget();return false;case"messageType":getActionMessageType();return false;case"scope":getActionScope();return false}}}return true};var getActionSource=function(){self.infoPanel.updateText("Select a location for this action");gettingActionSource=true;for(var countryIndex=0;countryIndex<self.map.countries.length;++countryIndex){var country=self.map.countries[countryIndex];if(isValidAction(country,currentAction)){country.highlightCountry(true);validCountriesForAction.push(country)}else{country.highlightCountry(false)}}};var setActionSource=function(country){if(willCountryAcceptAction(country)){currentAction.source=self.map.getCountryIndex(country);buildAction()}else{cancelCurrentAction()}gettingActionSource=false;validCountriesForAction=[];self.map.clearCountryHighlights()};var getActionDestination=function(){self.infoPanel.updateText("Select a destination for this action");gettingActionDestination=true;validCountriesForAction=[];for(var countryIndex=0;countryIndex<self.map.countries.length;++countryIndex){var country=self.map.countries[countryIndex];if(countryIndex!==currentAction.source&&!country.hasBeenEscapedFrom()){country.highlightCountry(true);validCountriesForAction.push(country)}else{country.highlightCountry(false)}}};var setActionDestination=function(destinationCountry){if(willCountryAcceptAction(destinationCountry)){if(currentAction instanceof Escape){var sourceCountry=self.map.countries[currentAction.source];sourceCountry.agentEscaped()}currentAction.destination=self.map.getCountryIndex(destinationCountry);buildAction()}else{cancelCurrentAction()}gettingActionDestination=false;validCountriesForAction=[];self.map.clearCountryHighlights()};var getActionPlayerTarget=function(){self.infoPanel.updateText("Select the player you wish to target");targetSelector.show(getCurrentActionButtonPosition())};function setActionPlayerTarget(targetPlayerIndex){targetSelector.hide();currentAction.target=targetPlayerIndex;buildAction()}var getActionAgentTarget=function(){var playerIndices=[];if(currentAction.targetEnemies){var playerCount=self.actionList.getPlayerNames().length;for(var playerIndex=0;playerIndex<playerCount;++playerIndex){if(playerIndex!==currentPlayerIndex){playerIndices.push(playerIndex)}}}else{playerIndices.push(currentPlayerIndex)}if(playerIndices.length>0){self.infoPanel.updateText("Select the agent you wish to target");for(var countryIndex=0;countryIndex<self.map.countries.length;++countryIndex){if(isValidAction(self.map.countries[countryIndex],currentAction)){self.map.countries[countryIndex].readyAgentOverviewForTargetPick(countryIndex,playerIndices)}}if(currentAction.targetDisabled){self.disabledAgentsView.readyAgentOverviewForTargetPick("D",playerIndices)}}};function setActionAgentTarget(source,target){self.map.clearCountryTargetPicking();if(currentAction.targetDisabled){self.disabledAgentsView.clearAgentPicking()}currentAction.source=source;if(target.player!==currentPlayerIndex){currentAction.target=target.player}currentAction.agentIndex=target.agent;buildAction()}var getActionMessageType=function(){self.infoPanel.updateText("Select a message type for the agent to use");messageTypeSelector=new MessageTypeSelector(rootElement,setActionMessageType,getCurrentActionButtonPosition())};var setActionMessageType=function(messageType){messageTypeSelector.remove();messageTypeSelector=null;currentAction.messageType=messageType;buildAction()};var getActionScope=function(){self.infoPanel.updateText("Select this action's scope");scopeSelector=new ScopeSelector(rootElement,setActionScope,getCurrentActionButtonPosition(),getCurrentActionMessageType(),areAgentScopesValid())};var setActionScope=function(scope){scopeSelector.remove();scopeSelector=null;currentAction.scope=scope;buildAction()};var getCurrentActionMessageType=function(){if(currentAction instanceof Attack){return MessageType.NEGATIVE}return MessageType.POSITIVE};var submitCurrentAction=function(){self.addAction(currentAction);cleanupActionSetup();currentActionButton=null;currentAction="";self.infoPanel.updateText("Add actions or submit your turn").show();$(document).trigger("ActionSubmitted")};var cancelCurrentAction=function(){cleanupActionSetup();currentActionButton=null;currentAction="";self.infoPanel.updateText("Add actions or submit your turn").show()};var cleanupActionSetup=function(){$("body").unbind("click.cancelAction");self.map.clearCountryHighlights();self.map.clearCountryTargetPicking();if(messageTypeSelector!==null){messageTypeSelector.remove();messageTypeSelector=null}if(scopeSelector!==null){scopeSelector.remove();scopeSelector=null}targetSelector.hide()};var createAttackAction=function(){var action=new Attack;action.targetEnemies=true;return action};var createBoostAction=function(){var action=new Boost;return action};var createDesperationAction=function(){var action=new Desperation;return action};var createDisableAction=function(){var action=new Disable;action.targetEnemies=true;action.targetDisabled=false;return action};var createEscapeAction=function(){var action=new Escape;action.targetEnemies=false;action.targetDisabled=false;return action};var createMoveAction=function(){var action=new Move;action.targetEnemies=false;action.targetDisabled=canActivateAgent();return action};var createRecruitAction=function(){var action=new Recruit;return action};var createRemoveAction=function(){var action=new Remove;action.targetEnemies=true;action.targetDisabled=false;return action};var createShiftAction=function(){var action=new Shift;action.targetEnemies=false;action.targetDisabled=false;return action};var createWithdrawAction=function(){var action=new Withdraw;action.targetEnemies=false;action.targetDisabled=false;return action};var getPlayerNames=function(playerList){var names=[];for(var playerIndex=0;playerIndex<playerList.length;++playerIndex){names.push(playerList[playerIndex].name)}return names};var getCountryNames=function(countryList){var names=[];for(var countryIndex=0;countryIndex<countryList.length;++countryIndex){names.push(countryList[countryIndex].name)}return names};var getPlayerScore=function(gameState,playerIndex){var playerScore=gameState.players[playerIndex].resources;for(var countryIndex=0;countryIndex<gameState.countries.length;++countryIndex){var country=gameState.countries[countryIndex];if(playerControlsCountry(country,playerIndex)){playerScore+=getCountryResources(country)}playerScore+=getNumberOfLoyalTerritories(country,playerIndex)}return playerScore};var getCurrentActionButtonPosition=function(){if(currentActionButton!==null){var pos=currentActionButton.offset();pos={x:pos.left+parseInt(currentActionButton.css("width"),10)/2,y:pos.top-parseInt(currentActionButton.css("height"),10)/2};return pos}return{x:0,y:0}}}var GameController=function(sendPlayerSetupDataCB,sendGameDataCB){"use strict";var sendPlayerSetupData=sendPlayerSetupDataCB;var sendGameData=sendGameDataCB;var self=this;var ui=new UI(onMapLoaded,addAction,removeAction,clearActions,submittedTurn);var gameState=null;var currentPlayerIndex=-1;var counterActions=[];var antiPlayerActions=[];var loyaltyActions=[];var turnActions=[];var currentResources=0;var currentActionCost=0;var completedTurn=false;var removedAgents=[];var shiftedAgents=[];this.setGameState=function(incomingGameState,playerID){completedTurn=false;gameState=incomingGameState;currentPlayerIndex=getPlayerIndex(gameState.players,playerID);currentResources=gameState.players[currentPlayerIndex].resources;completedTurn=gameState.players[currentPlayerIndex].hasTakenTurn;turnActions=[];resetActionLists();switch(gameState.phase){case GamePhase.SETUP:if(gameState.players[currentPlayerIndex].ideologyType===-1){var colors=this.getAvailablePlayerColors();var ideologyTypes=this.getAvailableIdeologyTypes();ui.buildSetupPlayerUI(colors,ideologyTypes,setupPlayerData)}else if(self.getNumberPlayerRequiringSetup()>0){ui.buildWaitingForSetupUI()}else{ui.buildSetupGameUI(gameState,playerID,currentPlayerIndex)}break;case GamePhase.NORMAL:ui.buildNormalGameUI(gameState,playerID,currentPlayerIndex,currentResources);break;case GamePhase.ENDGAME:ui.buildEndGameUI(gameState,playerID,currentPlayerIndex);break}};this.isGameSetup=function(){return gameState.phase===GamePhase.SETUP};this.isEndOfGame=function(){return gameState.phase===GamePhase.ENDGAME};this.updatePlayerList=function(playerData){for(var p=0;p<playerData.players.length;p++){for(var key in playerData.players[p]){if(gameState.players[p].hasOwnProperty(key)){gameState.players[p][key]=playerData.players[p][key]}}}ui.updatePlayerList(playerData,gameState.ideologyTypes);if(gameState.phase===GamePhase.SETUP&&playerData.players[currentPlayerIndex].ideologyType===-1){var colors=this.getAvailablePlayerColors();var ideologyTypes=this.getAvailableIdeologyTypes();
ui.buildSetupPlayerUI(colors,ideologyTypes,setupPlayerData)}};this.getTurnActionsString=function(){return stringifyActions(turnActions)};this.getAvailablePlayerColors=function(){var takenColors=[];gameState.players.forEach(function(player){takenColors.push(player.color)});var availableColors=gameState.playerColors.filter(function(element,index,array){var elementColor=element.toUpperCase();return takenColors.indexOf(elementColor)===-1});return availableColors};this.getAvailableIdeologyTypes=function(){var stateChosen=false;var intType;for(var i=0;i<gameState.players.length;++i){intType=gameState.players[i].ideologyType;if(gameState.ideologyTypes[intType]==="State"){stateChosen=true;break}}var availableTypes;if(stateChosen){availableTypes=gameState.ideologyTypes.filter(function(element,index,array){return element!=="State"})}else if(this.getNumberPlayerRequiringSetup()===1){availableTypes=["State"]}else{availableTypes=gameState.ideologyTypes.slice(0)}return availableTypes};this.getNumberPlayerRequiringSetup=function(){var numPlayers=0;for(var i=0;i<gameState.players.length;++i){if(gameState.players[i].ideologyType===-1){++numPlayers}}return numPlayers};function setupPlayerData(setupData){for(var i=0;i<gameState.ideologyTypes.length;++i){if(setupData.ideologyType===gameState.ideologyTypes[i]){setupData.ideologyType=i;break}}sendPlayerSetupData(setupData,function(success,message){if(success){ui.removeSetupPlayerUI();ui.buildWaitingForSetupUI()}else{alert(message);var colors=self.getAvailablePlayerColors();var ideologyTypes=self.getAvailableIdeologyTypes();ui.buildSetupPlayerUI(colors,ideologyTypes,setupPlayerData)}})}function onMapLoaded(){var actions=parseActionString(gameState.players[currentPlayerIndex].actions,currentPlayerIndex);for(var actionIndex=0;actionIndex<actions.length;++actionIndex){addAction(actions[actionIndex])}updateTurnStatus()}function addAction(action){var newAgent,movedAgent,removedAgent,shiftedAgent;if(action instanceof Move||action instanceof Escape){movedAgent=null;if(action.source!=="D"){movedAgent=gameState.countries[action.source].agents[currentPlayerIndex].splice(action.agentIndex,1)[0]}else{movedAgent=gameState.players[currentPlayerIndex].disabledAgents.splice(action.agentIndex,1)[0]}gameState.countries[action.destination].agents[currentPlayerIndex].push(movedAgent)}else if(action instanceof Recruit){newAgent=new Agent(action.type,action.messageType,action.target);gameState.countries[action.source].agents[currentPlayerIndex].push(newAgent)}else if(action instanceof Disable||action instanceof Remove){removedAgent=gameState.countries[action.source].agents[action.target].splice(action.agentIndex,1)[0];if(action instanceof Disable){gameState.players[action.target].disabledAgents.push(removedAgent)}else{removedAgents.push(removedAgent)}}else if(action instanceof Shift){shiftedAgent=gameState.countries[action.source].agents[currentPlayerIndex][action.agentIndex];shiftedAgents.push(new Agent(shiftedAgent.type,shiftedAgent.messageType,shiftedAgent.target));shiftedAgent.messageType=action.messageType;shiftedAgent.target=shiftedAgent.target}else if(action instanceof Withdraw){removedAgent=gameState.countries[action.source].agents[currentPlayerIndex].splice(action.agentIndex,1)[0];gameState.players[currentPlayerIndex].disabledAgents.push(removedAgent)}else if(action instanceof Desperation){gameState.players[currentPlayerIndex].usedDesperation=true}if(action instanceof Escape){counterActions.push(action)}else if(action instanceof Disable||action instanceof Remove){antiPlayerActions.push(action)}else{loyaltyActions.push(action)}turnActions=counterActions.concat(antiPlayerActions,loyaltyActions);updateTurnStatus()}function removeAction(actionClass,actionIndex){var actionIndexToRemove=actionIndex;if(actionClass>0){actionIndexToRemove+=counterActions.length}if(actionClass>1){actionIndexToRemove+=antiPlayerActions.length}if(0<=actionIndexToRemove&&actionIndexToRemove<turnActions.length){var action=turnActions[actionIndexToRemove];var actionsToRemove=[actionIndexToRemove];if(action instanceof Shift||action instanceof Move||action instanceof Escape||action instanceof Recruit||action instanceof Withdraw){for(var removedActionIndex=actionIndexToRemove+1;removedActionIndex<turnActions.length;++removedActionIndex){actionsToRemove.push(removedActionIndex)}}for(var removeIndex=actionsToRemove.length-1;removeIndex>=0;--removeIndex){actionRemoved(turnActions[actionsToRemove[removeIndex]]);turnActions.splice(actionsToRemove[removeIndex],1)}resetActionLists();updateTurnStatus()}}function clearActions(){for(var actionIndex=turnActions.length-1;actionIndex>=0;--actionIndex){actionRemoved(turnActions[actionIndex])}counterActions=[];antiPlayerActions=[];loyaltyActions=[];turnActions=[];updateTurnStatus()}function submittedTurn(){sendGameData();completedTurn=true;gameState.players[currentPlayerIndex].hasTakenTurn=true;updateTurnStatus()}var actionRemoved=function(action){var movedAgent,removedAgent;if(action instanceof Move||action instanceof Escape){movedAgent=gameState.countries[action.destination].agents[currentPlayerIndex].pop();if(action.source!=="D"){gameState.countries[action.source].agents[currentPlayerIndex].splice(action.agentIndex,0,movedAgent)}else{gameState.players[currentPlayerIndex].disabledAgents[action.agentIndex]=movedAgent}if(action instanceof Escape){ui.undoEscapeAction(action.source)}}else if(action instanceof Recruit){gameState.countries[action.source].agents[currentPlayerIndex].pop()}else if(action instanceof Disable||action instanceof Remove){removedAgent=null;if(action instanceof Disable){removedAgent=gameState.players[action.target].disabledAgents.pop()}else{removedAgent=removedAgents.pop()}gameState.countries[action.source].agents[action.target].splice(action.agentIndex,0,removedAgent)}else if(action instanceof Shift){gameState.countries[action.source].agents[currentPlayerIndex][action.agentIndex]=shiftedAgents.pop()}else if(action instanceof Withdraw){removedAgent=gameState.players[currentPlayerIndex].disabledAgents.pop();gameState.countries[action.source].agents[currentPlayerIndex].splice(action.agentIndex,0,removedAgent)}else if(action instanceof Desperation){gameState.players[currentPlayerIndex].usedDesperation=false}};var updateTurnStatus=function(){currentActionCost=getActionCosts(turnActions);ui.updateActionCosts(currentResources,getExtraActionCosts(turnActions),currentActionCost,gameState,currentPlayerIndex);ui.updateCurrentActionList(turnActions);ui.enableSubmitButton(!completedTurn&&(currentResources<0&&currentActionCost===0||currentActionCost<=currentResources));ui.updateGameState(gameState)};var getPlayerIndex=function(playerList,playerID){for(var playerIndex=0;playerIndex<playerList.length;++playerIndex){if(playerList[playerIndex].id===playerID){return playerIndex}}return-1};var resetActionLists=function(){counterActions=[];antiPlayerActions=[];loyaltyActions=[];for(var actionIndex=0;actionIndex<turnActions.length;++actionIndex){var action=turnActions[actionIndex];if(action instanceof Escape){counterActions.push(action)}else if(action instanceof Disable||action instanceof Remove){antiPlayerActions.push(action)}else{loyaltyActions.push(action)}}};var stringifyActions=function(actions){var string="";for(var actionIndex=0;actionIndex<actions.length-1;++actionIndex){string+=stringifyAction(actions[actionIndex])+";"}if(actions.length>0){string+=stringifyAction(actions[actions.length-1])}return string}};