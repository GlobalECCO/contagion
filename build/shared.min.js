this.Attack=Attack;this.Boost=Boost;this.Desperation=Desperation;this.Disable=Disable;this.Escape=Escape;this.Move=Move;this.Recruit=Recruit;this.Remove=Remove;this.Shift=Shift;this.Withdraw=Withdraw;function Action(){this.player=-1;this.source=-1;this.cost=0}Attack.prototype=new Action;Attack.prototype.constructor=Attack;function Attack(){this.cost=2;this.scope=-1;this.target=-1}Boost.prototype=new Action;Boost.prototype.constructor=Boost;function Boost(){this.cost=2;this.scope=-1}Desperation.prototype=new Action;Desperation.prototype.constructor=Desperation;function Desperation(){this.cost=0}Disable.prototype=new Action;Disable.prototype.constructor=Disable;function Disable(){this.cost=3;this.target=-1;this.agentIndex=-1}Escape.prototype=new Action;Escape.prototype.constructor=Escape;function Escape(){this.cost=1;this.destination=-1;this.agentIndex=-1}Move.prototype=new Action;Move.prototype.constructor=Move;function Move(){this.cost=0;this.destination=-1;this.agentIndex=-1}Recruit.prototype=new Action;Recruit.prototype.constructor=Recruit;function Recruit(){this.cost=3;this.type=-1;this.messageType=-1;this.target=-1}Remove.prototype=new Action;Remove.prototype.constructor=Remove;function Remove(){this.cost=5;this.target=-1;this.agentIndex=-1}Shift.prototype=new Action;Shift.prototype.constructor=Shift;function Shift(){this.cost=1;this.agentIndex=-1;this.messageType=-1;this.target=-1}Withdraw.prototype=new Action;Withdraw.prototype.constructor=Withdraw;function Withdraw(){this.cost=-1;this.agentIndex=-1}if(typeof require!=="undefined"){var Attack=require("./actionTypes.js").Attack;var Boost=require("./actionTypes.js").Boost;var Desperation=require("./actionTypes.js").Desperation;var Disable=require("./actionTypes.js").Disable;var Escape=require("./actionTypes.js").Escape;var Move=require("./actionTypes.js").Move;var Recruit=require("./actionTypes.js").Recruit;var Remove=require("./actionTypes.js").Remove;var Shift=require("./actionTypes.js").Shift;var Withdraw=require("./actionTypes.js").Withdraw}this.parseActionString=function(stringToParse,playerIndex){var actions=[];if(stringToParse!=""){var actionStrings=stringToParse.split(";");for(var index in actionStrings){var firstChar=actionStrings[index].charAt(0);var actionParameters=actionStrings[index].substring(1);actionParameters=actionParameters.split(",");var newAction=null;if(firstChar=="A"&&actionParameters.length==3){newAction=new Attack;newAction.scope=parseInt(actionParameters[0]);newAction.source=parseInt(actionParameters[1]);newAction.target=parseInt(actionParameters[2])}else if(firstChar=="B"&&actionParameters.length==2){newAction=new Boost;newAction.scope=parseInt(actionParameters[0]);newAction.source=parseInt(actionParameters[1])}else if(firstChar=="D"&&actionParameters.length==3){newAction=new Disable;newAction.source=parseInt(actionParameters[0]);newAction.target=parseInt(actionParameters[1]);newAction.agentIndex=parseInt(actionParameters[2])}else if(firstChar=="E"&&actionParameters.length==3){newAction=new Escape;newAction.source=parseInt(actionParameters[0]);newAction.destination=parseInt(actionParameters[1]);newAction.agentIndex=parseInt(actionParameters[2])}else if(firstChar=="M"&&actionParameters.length==3){newAction=new Move;if(isNaN(actionParameters[0])){newAction.source=actionParameters[0]}else{newAction.source=parseInt(actionParameters[0])}newAction.destination=parseInt(actionParameters[1]);newAction.agentIndex=parseInt(actionParameters[2])}else if(firstChar=="R"&&actionParameters.length==3){newAction=new Remove;newAction.source=parseInt(actionParameters[0]);newAction.target=parseInt(actionParameters[1]);newAction.agentIndex=parseInt(actionParameters[2])}else if(firstChar=="S"&&actionParameters.length==4){newAction=new Shift;newAction.source=parseInt(actionParameters[0]);newAction.agentIndex=parseInt(actionParameters[1]);newAction.messageType=parseInt(actionParameters[2]);newAction.target=parseInt(actionParameters[3])}else if(firstChar=="W"&&actionParameters.length==2){newAction=new Withdraw;newAction.source=parseInt(actionParameters[0]);newAction.agentIndex=parseInt(actionParameters[1])}else if(firstChar=="X"&&actionParameters.length==1){newAction=new Desperation;newAction.source=parseInt(actionParameters[0])}else if(!isNaN(firstChar)&&actionParameters.length==4){newAction=new Recruit;newAction.source=parseInt(firstChar);newAction.type=parseInt(actionParameters[1]);newAction.messageType=parseInt(actionParameters[2]);newAction.target=parseInt(actionParameters[3])}if(newAction!=null){newAction.player=playerIndex;actions.push(newAction)}}}return actions};var stringifyAction=function(action){var string="";if(action instanceof Attack){string="A"+action.scope.toString()+","+action.source.toString()+","+action.target.toString()}else if(action instanceof Boost){string="B"+action.scope.toString()+","+action.source.toString()}else if(action instanceof Desperation){string="X"+action.source.toString()}else if(action instanceof Disable){string="D"+action.source.toString()+","+action.target.toString()+","+action.agentIndex.toString()}else if(action instanceof Escape){string="E"+action.source.toString()+","+action.destination.toString()+","+action.agentIndex.toString()}else if(action instanceof Move){string="M"+action.source.toString()+","+action.destination.toString()+","+action.agentIndex.toString()}else if(action instanceof Recruit){string=action.source.toString()+","+action.type.toString()+","+action.messageType.toString()+","+action.target.toString()}else if(action instanceof Remove){string="R"+action.source.toString()+","+action.target.toString()+","+action.agentIndex.toString()}else if(action instanceof Shift){string="S"+action.source.toString()+","+action.agentIndex.toString()+","+action.messageType.toString()+","+action.target.toString()}else if(action instanceof Withdraw){string="W"+action.source.toString()+","+action.agentIndex.toString()}return string};this.ActionScope={INVALID:-1,GLOBAL:0,BROAD:1,LOCAL:2};this.AgentType={INVALID:-1,WORKING:0,MIDDLE:1,UPPER:2,TYPE_COUNT:function(){var typeCount=-2;for(var type in this){if(this.hasOwnProperty(type)){++typeCount}}return typeCount}};this.MessageType={INVALID:-1,NEGATIVE:0,POSITIVE:1,FLEXIBLE:2,TYPE_COUNT:function(){var typeCount=-2;for(var type in this){if(this.hasOwnProperty(type)){++typeCount}}return typeCount}};this.Agent=function(type,messageType,target){this.type=type;this.messageType=messageType;this.target=target};this.GamePhase={SETUP:"Setup",NORMAL:"Normal",ENDGAME:"EndGame"};this.IdeologyTypes={STATE:0,RELIGIOUS:1,NATIONALIST:2,MARXIST:3};this.numberOfCountriesNeededToWin=function(gameState){return Math.ceil(gameState.countries.length/gameState.players.length)};this.numberOfTerritoriesNeededToWin=function(gameState){var totalTerritoryCount=0;for(var countryIndex=0;countryIndex<gameState.countries.length;++countryIndex){totalTerritoryCount+=gameState.countries[countryIndex].territories.length}return Math.ceil(totalTerritoryCount/gameState.players.length+1)};this.getCountryResources=function(country){return country.territories.length-1};this.getTerritoryResourceThresholds=function(){return[{threshold:5,value:2},{threshold:10,value:1}]};this.getAgentUpkeepCosts=function(gameState,playerIndex){return this.getActiveAgents(gameState,playerIndex)-1};this.getActiveAgents=function(gameState,playerIndex){var agentCount=0;for(var countryIndex=0;countryIndex<gameState.countries.length;++countryIndex){agentCount+=gameState.countries[countryIndex].agents[playerIndex].length}return agentCount};this.getExtraActionCosts=function(actions){var cost=0,additionalActionCount=0;for(var actionIndex=0;actionIndex<actions.length;++actionIndex){if(!(actions[actionIndex]instanceof Desperation)){cost+=additionalActionCount;++additionalActionCount}}return cost};this.getActionCosts=function(actions){var cost=0;for(var actionIndex=0;actionIndex<actions.length;++actionIndex){cost+=actions[actionIndex].cost}return cost+this.getExtraActionCosts(actions)};this.playerControlsCountry=function(country,playerIndex){for(var territoryIndex=0;territoryIndex<country.territories.length;++territoryIndex){var territory=country.territories[territoryIndex];if(territory.loyalToWhom!=playerIndex||territory.currentLoyalty<territory.maxLoyalty){return false}}return true};this.getNumberOfLoyalTerritories=function(country,playerIndex){var loyalTerritories=0;var temp=country.territories.length||false;if(temp===false)console.log("here");for(var territoryIndex=0;territoryIndex<country.territories.length;++territoryIndex){if(country.territories[territoryIndex].loyalToWhom==playerIndex){++loyalTerritories}}return loyalTerritories};this.getTerritoryColor=function(territory,neutralColor,playerColor){var percent=territory.currentLoyalty/territory.maxLoyalty;return interpolateColor(neutralColor,playerColor,percent)};this.getTerritoryLoyaltyPercentageString=function(territory){var percent=territory.currentLoyalty/territory.maxLoyalty;return Math.floor(percent*100).toString()+"%"};var interpolateColor=function(colorString1,colorString2,percent){var color1=hexToRGB(colorString1);var color2=hexToRGB(colorString2);var red=Math.round(color1.r+(color2.r-color1.r)*percent);var green=Math.round(color1.g+(color2.g-color1.g)*percent);var blue=Math.round(color1.b+(color2.b-color1.b)*percent);return"#"+componentToHex(red)+componentToHex(green)+componentToHex(blue)};var hexToRGB=function(hex){var result=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);return result?{r:parseInt(result[1],16),g:parseInt(result[2],16),b:parseInt(result[3],16)}:null};var componentToHex=function(component){var hex=component.toString(16);return hex.length===1?"0"+hex:hex};